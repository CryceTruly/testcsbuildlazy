{"version":3,"sources":["redux/actions/userAccountManagement/updatePassword.js","components/common/Feedback/Feedback.jsx","components/AccountManagement/Security/ChangePassword/index.jsx","components/common/PasswordForm/index.jsx","assets/images/error.png","redux/actions/users/login.js","components/Login/index.jsx","components/Login/LoginForm/index.jsx","containers/Login/useGeoLocation.js","containers/Login/useDeviceType.js","containers/Login/index.jsx"],"names":["data","requireAppId","dispatch","apiAction","method","url","onStart","type","UPDATE_PASSWORD_START","onSuccess","UPDATE_PASSWORD_SUCCESS","payload","success","Result","onFailure","error","UPDATE_PASSWORD_FAILURE","restoreUpdatePassword","CLEAR_UPDATE_PASSWORD","Feedback","message","title","callbackFn","useState","show","setShow","useDispatch","useEffect","setTimeout","className","onClick","src","successImage","errorImage","alt","width","global","translate","toUpperCase","defaultProps","ChangePassword","style","OTP","PID","updatePassword","useSelector","userAccountManagement","size","useWindowSize","errors","setErrors","oldPassword","password","confirmPassword","changePasswordData","setChangePasswordData","handleInputChange","target","name","value","clearError","toast","Description","fluid","placeholder","onChange","buttonText","passwordData","onInputChange","oldPasswordError","passwordError","confirmPasswordError","confirmationError","confirmation","validate","updatePasswordAction","Pwd","NewPwd","loading","PasswordForm","passwordStrength","setPasswordStrength","strength","checkPassword","pswdStrength","Object","keys","map","passwordStrengthLabel","label","color","Field","e","background","case","confirmIcon","editIcon","digit","specialCharacter","number","marginTop","prompt","Button","primary","disabled","module","exports","LOGIN_START","LOGIN_SUCCESS","LOGIN_ERROR","clearLoginUser","CLEAR_LOGIN_ERRORS","Login","handleChange","handleSubmit","credentials","pidError","pinError","isFormValid","setCredentials","isSettingNewPassword","setIsSettingNewPassword","setPid","setOTP","state","Password","UserMustChangePassword","autoClose","toastId","authHeader","rightHeadlineText","marginLeft","onSubmit","isLoading","LoginForm","autoComplete","Input","content","toString","pointing","icon","PIN","negative","visible","Header","to","geoData","setGeoData","navigator","geolocation","getCurrentPosition","res","coords","latitude","longitude","deviceDetector","DeviceDetector","userAgent","parse","os","client","device","deviceType","deviceOs","clientName","clientVersion","version","osVersion","LoginContainer","history","useHistory","userLocationData","user","CountryCode","getUserLocationDataAction","form","setForm","setPidError","setPasswordError","setIsFormValid","setPinError","digit0","digit1","digit2","digit3","useGeoLocation","useDeviceType","body","PhoneNumber","IMEI","SerialNumber","DeviceOS","OSVersion","MAC","Roaming","DeviceType","AppType","Longitude","Latitude","ClientName","ClientVersion","length","login","authData","currentUser","push","loginUser"],"mappings":"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","file":"static/js/30.9f31bcc6.chunk.js","sourcesContent":["import {\n  UPDATE_PASSWORD_START,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILURE,\n  CLEAR_UPDATE_PASSWORD,\n} from 'constants/action-types/userAccountManagement/updatePassword';\nimport apiAction from 'helpers/apiAction';\n\nexport default (data, requireAppId = false) => dispatch =>\n  dispatch(\n    apiAction({\n      method: 'post',\n      url: '/ChangeUserPwd',\n      data,\n      requireAppId,\n      onStart: () => dispatch =>\n        dispatch({\n          type: UPDATE_PASSWORD_START,\n        }),\n      onSuccess: data => dispatch => {\n        dispatch({\n          type: UPDATE_PASSWORD_SUCCESS,\n          payload: {\n            ...data[0],\n            success: data[0].Result === 'Success',\n          },\n        });\n      },\n      onFailure: error => dispatch => {\n        return dispatch({\n          type: UPDATE_PASSWORD_FAILURE,\n          payload: {\n            ...error[0],\n          },\n        });\n      },\n    }),\n  );\n\nexport const restoreUpdatePassword = () => dispatch => {\n  dispatch({\n    type: CLEAR_UPDATE_PASSWORD,\n  });\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport errorImage from 'assets/images/error.png';\nimport successImage from 'assets/images/confirm.png';\nimport './feedback.scss';\n\nconst Feedback = ({ message, title, success, callbackFn }) => {\n  const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setShow(true);\n    setTimeout(() => {\n      setShow(false);\n      if (callbackFn) {\n        callbackFn()(dispatch);\n      }\n    }, 7000);\n  }, []);\n  return (\n    <>\n      {show ? (\n        <div\n          className=\"feedbackWrapper\"\n          onClick={() => {\n            setShow(false);\n            if (callbackFn) {\n              callbackFn()(dispatch);\n            }\n          }}\n        >\n          <div className=\"feedbackWrapper-content\">\n            <img\n              src={success ? successImage : errorImage}\n              alt=\"status\"\n              width={100}\n            />\n            <div className=\"titleText\">\n              {global.translate(title).toUpperCase()}\n            </div>\n            <p className=\"messageText\">{global.translate(message)}</p>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\nFeedback.propTypes = {\n  message: PropTypes.string,\n  title: PropTypes.string,\n  success: PropTypes.bool,\n  callbackFn: PropTypes.func,\n};\nFeedback.defaultProps = {\n  title: 'SORRY',\n  callbackFn: () => {},\n  success: false,\n  message: 'Invalid credential,please try again',\n};\nexport default Feedback;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport './ChangePassword.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport PasswordInput from 'components/common/PasswordInput';\nimport PasswordForm from 'components/common/PasswordForm';\nimport updatePasswordAction, {\n  restoreUpdatePassword,\n} from 'redux/actions/userAccountManagement/updatePassword';\nimport useWindowSize from 'utils/useWindowSize';\n\nconst ChangePassword = ({ style, OTP, PID }) => {\n  const dispatch = useDispatch();\n  const { updatePassword } = useSelector(\n    ({ userAccountManagement }) => userAccountManagement,\n  );\n\n  const size = useWindowSize();\n\n  const [errors, setErrors] = useState({});\n  const [changePasswordData, setChangePasswordData] = useState({\n    oldPassword: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const clearError = name => {\n    setErrors({\n      ...errors,\n      [name]: '',\n    });\n  };\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    clearError(name);\n    setChangePasswordData({\n      ...changePasswordData,\n      [name]: value,\n    });\n  };\n\n  /**\n   * @returns {bool} true if no error\n   */\n  const validate = () => {\n    const {\n      oldPassword,\n      password,\n      confirmPassword,\n    } = changePasswordData;\n\n    const oldPasswordError = oldPassword\n      ? ''\n      : global.translate('Please enter the old password');\n\n    const passwordError = password\n      ? ''\n      : global.translate('Please enter your password');\n\n    const confirmPasswordError = confirmPassword\n      ? ''\n      : global.translate('Confirm your new password', 45);\n\n    const confirmationError =\n      password === confirmPassword\n        ? ''\n        : global.translate('The new passwords do not match.', 325);\n\n    setErrors({\n      ...errors,\n      oldPassword: oldPasswordError,\n      password: passwordError,\n      confirmPassword: confirmPasswordError,\n      confirmation: confirmPasswordError ? '' : confirmationError,\n    });\n    return !(\n      oldPasswordError ||\n      passwordError ||\n      confirmPasswordError ||\n      confirmationError\n    );\n  };\n  const handleSubmit = () => {\n    if (!validate()) {\n      return false;\n    }\n    const { oldPassword, password } = changePasswordData;\n    updatePasswordAction(\n      { Pwd: oldPassword, NewPwd: password, OTP, PID },\n      (OTP && true) || false,\n    )(dispatch);\n    return true;\n  };\n\n  useEffect(() => {\n    if (updatePassword.success) {\n      toast.success(updatePassword.Description);\n      setChangePasswordData({\n        oldPassword: '',\n        password: '',\n        confirmPassword: '',\n      });\n      restoreUpdatePassword()(dispatch);\n    }\n    if (updatePassword.error) {\n      toast.error(updatePassword.error.Description);\n    }\n  }, [updatePassword]);\n\n  return (\n    <div\n      style={size.width > 500 ? style : {}}\n      className=\"change-password-container\n       large-padding border-1\n        b-light-grey border-radius-4\n        medium-v-margin xlarge-h-margin\"\n    >\n      <Form>\n        <PasswordInput\n          fluid\n          placeholder={global.translate('Old password')}\n          name=\"oldPassword\"\n          onChange={handleInputChange}\n          error={(errors && errors.oldPassword) || false}\n          value={changePasswordData && changePasswordData.oldPassword}\n          type=\"password\"\n        />\n        <PasswordForm\n          buttonText={global.translate('Change password')}\n          errors={errors}\n          passwordData={{\n            password:\n              changePasswordData && changePasswordData.password,\n            confirmPassword:\n              changePasswordData &&\n              changePasswordData.confirmPassword,\n          }}\n          onInputChange={handleInputChange}\n          onClick={handleSubmit}\n          loading={updatePassword.loading}\n        />\n      </Form>\n    </div>\n  );\n};\n\nChangePassword.propTypes = {\n  style: PropTypes.instanceOf(Object),\n  OTP: PropTypes.string,\n  PID: PropTypes.string,\n};\n\nChangePassword.defaultProps = {\n  style: {},\n  OTP: '',\n  PID: '',\n};\n\nexport default ChangePassword;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label } from 'semantic-ui-react';\n\nimport PasswordInput from 'components/common/PasswordInput';\nimport editIcon from 'assets/images/edit.png';\nimport confirmIcon from 'assets/images/confirm.png';\nimport './PasswordForm.scss';\nimport checkPassword from 'utils/checkPassword';\n\nconst PasswordForm = ({\n  passwordData,\n  onInputChange,\n  clearError,\n  errors,\n  buttonText,\n  onClick,\n  loading,\n}) => {\n  const { password, confirmPassword } = passwordData;\n  const [passwordStrength, setPasswordStrength] = useState(0); // passwordStrength in percentage\n\n  useEffect(() => {\n    const strength = checkPassword(password);\n    let pswdStrength = 0;\n    Object.keys(strength).map(type => {\n      if (strength[type]) pswdStrength += 25;\n      return true;\n    });\n    setPasswordStrength(pswdStrength);\n  }, [password]);\n\n  const passwordStrengthLabel = pswdStrength => {\n    if (pswdStrength <= 50)\n      return { label: 'Very Weak', color: '#F42C10' };\n    if (pswdStrength === 75)\n      return { label: 'Weak', color: '#EA5726' };\n    if (pswdStrength === 100)\n      return { label: 'Strong', color: '#0A9220' };\n    return true;\n  };\n\n  return (\n    <Form className=\"form-password-input\">\n      <Form.Field>\n        <PasswordInput\n          placeholder=\"Enter your password\"\n          name=\"password\"\n          type=\"password\"\n          error={errors.password || false}\n          value={password}\n          onChange={e => {\n            onInputChange(e);\n            clearError(e);\n          }}\n        />\n      </Form.Field>\n      <span>\n        Password strength:\n        <span\n          style={{\n            color: passwordStrengthLabel(passwordStrength).color,\n          }}\n        >{` ${passwordStrengthLabel(passwordStrength).label}`}</span>\n      </span>\n      <div className=\"password-strength\" style={{}}>\n        <div\n          className=\"password-strength-bar\"\n          style={{\n            width: `${passwordStrength}%`,\n            background: passwordStrengthLabel(passwordStrength).color,\n          }}\n        />\n      </div>\n      <div className=\"checklist\">\n        <div className=\"password-checklist\">\n          <img\n            src={\n              checkPassword(password).case ? confirmIcon : editIcon\n            }\n            alt=\"edit\"\n          />\n          <span>Enter at least one lowercase and upper case</span>\n        </div>\n        <div className=\"password-checklist\">\n          <img\n            src={\n              checkPassword(password).digit ? confirmIcon : editIcon\n            }\n            alt=\"edit\"\n          />\n          <span>Enter at least one number (1-9)</span>\n        </div>\n        <div className=\"password-checklist\">\n          <img\n            src={\n              checkPassword(password).specialCharacter\n                ? confirmIcon\n                : editIcon\n            }\n            alt=\"edit\"\n          />\n          <span>Enter at least a special character (!@#$%^&*)</span>\n        </div>\n        <div className=\"password-checklist\">\n          <img\n            src={\n              checkPassword(password).number ? confirmIcon : editIcon\n            }\n            alt=\"edit\"\n          />\n          <span>Enter at least 8 characters</span>\n        </div>\n      </div>\n      <Form.Field>\n        <PasswordInput\n          placeholder=\"Confirm your password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          error={errors.confirmPassword || false}\n          value={confirmPassword}\n          onChange={e => {\n            onInputChange(e);\n            clearError(e);\n          }}\n        />\n      </Form.Field>\n      {errors.confirmation && (\n        <Form.Field style={{ marginTop: '-7px' }}>\n          <Label prompt>{errors.confirmation}</Label>\n        </Form.Field>\n      )}\n      <Form.Button\n        type=\"button\"\n        loading={loading}\n        primary\n        disabled={passwordStrength !== 100}\n        onClick={onClick}\n      >\n        {global.translate(buttonText)}\n      </Form.Button>\n    </Form>\n  );\n};\n\nPasswordForm.propTypes = {\n  passwordData: PropTypes.shape({\n    password: PropTypes.string.isRequired,\n    confirmPassword: PropTypes.string.isRequired,\n  }),\n  onInputChange: PropTypes.func,\n  clearError: PropTypes.func,\n  errors: PropTypes.instanceOf(Object),\n  buttonText: PropTypes.string,\n  onClick: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nPasswordForm.defaultProps = {\n  onInputChange: () => null,\n  clearError: () => null,\n  onClick: () => null,\n  passwordData: {\n    password: '',\n    confirmPassword: '',\n  },\n  errors: {},\n  buttonText: 'Next',\n  loading: false,\n};\n\nexport default PasswordForm;\n","module.exports = __webpack_public_path__ + \"static/media/error.a48d0b4f.png\";","import {\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  CLEAR_LOGIN_ERRORS,\n} from 'constants/action-types/users/login';\nimport apiAction from 'helpers/apiAction';\n\nexport default data => dispatch =>\n  dispatch(\n    apiAction({\n      method: 'post',\n      url: '/CheckUserCredential',\n      data,\n      onStart: () => dispatch =>\n        dispatch({\n          type: LOGIN_START,\n        }),\n      onSuccess: data => dispatch => {\n        if (data) {\n          if (data[0]) {\n            if (data[0].Result !== 'FAILED') {\n              return dispatch({\n                type: LOGIN_SUCCESS,\n                payload: {\n                  data,\n                },\n              });\n            }\n            return dispatch({\n              type: LOGIN_ERROR,\n              payload: {\n                error: data,\n              },\n            });\n          }\n        }\n        return null;\n      },\n      onFailure: error => dispatch => {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: {\n            error,\n          },\n        });\n      },\n    }),\n  );\nexport const clearLoginUser = () => dispatch =>\n  dispatch({\n    type: CLEAR_LOGIN_ERRORS,\n  });\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport './login.scss';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport AuthWrapper from 'components/common/AuthWrapper/AuthWrapper';\nimport ChangePassword from 'components/AccountManagement/Security/ChangePassword';\nimport LoginForm from './LoginForm';\n\nconst Login = ({\n  handleChange,\n  handleSubmit,\n  credentials,\n  error,\n  loading,\n  pidError,\n  passwordError,\n  pinError,\n  clearLoginUser,\n  isFormValid,\n  setCredentials,\n}) => {\n  const [isSettingNewPassword, setIsSettingNewPassword] = useState(\n    false,\n  );\n  const [PID, setPid] = useState(null);\n  const [OTP, setOTP] = useState(null);\n\n  const { updatePassword } = useSelector(\n    state => state.userAccountManagement,\n  );\n\n  useEffect(() => {\n    if (updatePassword.success) {\n      setIsSettingNewPassword(false);\n      setCredentials({ ...credentials, Password: '' });\n    }\n  }, [updatePassword]);\n\n  useEffect(() => {\n    if (credentials && !updatePassword.success) {\n      if (credentials.PID) {\n        setPid(credentials.PID);\n      }\n    }\n  }, [credentials, updatePassword]);\n\n  useEffect(() => {\n    if (error) {\n      if (error.error) {\n        if (error.error[0]) {\n          if (error.error[0].UserMustChangePassword === 'YES') {\n            toast(global.translate(error.error[0].Description), {\n              autoClose: 5000 * 6,\n              type: 'error',\n              toastId: 13,\n            });\n            setOTP(error.error[0].OTP);\n            setIsSettingNewPassword(true);\n          }\n        }\n      }\n    }\n  }, [error]);\n\n  return (\n    <AuthWrapper\n      authHeader={global.translate('Welcome Back')}\n      rightHeadlineText={\n        !isSettingNewPassword\n          ? global.translate('Login to your account', 1430)\n          : global.translate('Change your Password')\n      }\n    >\n      <div className=\"form-content\">\n        {!isSettingNewPassword ? (\n          <LoginForm\n            handleChange={handleChange}\n            onSubmit={handleSubmit}\n            isLoading={loading}\n            credentials={credentials}\n            error={error}\n            pidError={pidError}\n            pinError={pinError}\n            passwordError={passwordError}\n            isFormValid={isFormValid}\n            clearLoginUser={clearLoginUser}\n          />\n        ) : (\n          <ChangePassword\n            style={{ marginLeft: '-40px' }}\n            OTP={OTP}\n            PID={PID}\n          />\n        )}\n      </div>\n    </AuthWrapper>\n  );\n};\nLogin.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  credentials: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  clearLoginUser: PropTypes.func,\n  loading: PropTypes.bool,\n  error: PropTypes.objectOf(PropTypes.any),\n  pidError: PropTypes.string,\n  passwordError: PropTypes.string,\n  pinError: PropTypes.string,\n  isFormValid: PropTypes.bool,\n  setCredentials: PropTypes.func,\n};\n\nLogin.defaultProps = {\n  loading: false,\n  error: null,\n  pidError: null,\n  passwordError: null,\n  pinError: null,\n  isFormValid: false,\n  clearLoginUser: () => {},\n  setCredentials: () => {},\n};\n\nexport default Login;\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Form, Message } from 'semantic-ui-react';\nimport Feedback from 'components/common/Feedback/Feedback';\nimport PasswordInput from 'components/common/PasswordInput';\nimport PinCodeForm from 'components/common/PinCodeForm';\nimport './style.scss';\n\nconst LoginForm = ({\n  handleChange,\n  credentials,\n  onSubmit,\n  isLoading,\n  error,\n  pidError,\n  passwordError,\n  pinError,\n  clearLoginUser,\n}) => {\n  return (\n    <>\n      {error && (\n        <Feedback\n          message={\n            error.error[0]\n              ? global.translate(error.error[0].Description)\n              : global.translate(error.error.error, 162)\n          }\n          title=\"error\"\n          callbackFn={clearLoginUser}\n        />\n      )}\n      {!error && (\n        <Form\n          className=\"form-information\"\n          onSubmit={onSubmit}\n          autoComplete=\"off\"\n        >\n          <Form.Field>\n            <Form.Input\n              error={\n                pidError && {\n                  content: global.translate(pidError.toString()),\n                  pointing: 'above',\n                }\n              }\n              className=\"formInput\"\n              placeholder={global.translate('Personal ID')}\n              name=\"PID\"\n              value={\n                (credentials.PID && credentials.PID.toUpperCase()) ||\n                ''\n              }\n              onChange={handleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <PasswordInput\n              error={\n                passwordError && {\n                  content: global.translate(passwordError.toString()),\n                  pointing: 'above',\n                }\n              }\n              placeholder={global.translate('Password')}\n              onChange={handleChange}\n              type=\"password\"\n              name=\"Password\"\n              value={credentials.Password || ''}\n              icon=\"eye\"\n            />\n          </Form.Field>\n\n          <PinCodeForm\n            pinError={pinError}\n            onChange={handleChange}\n            name=\"PIN\"\n            value={credentials.PIN || ''}\n          />\n\n          {error !== null ? (\n            <Message negative visible={error !== null}>\n              <Message.Header>\n                {global.translate('Error')}\n              </Message.Header>\n              <p>\n                {error && error.error && error.error[0]\n                  ? global.translate(error.error[0].Description)\n                  : global.translate(\n                      error && error.error && error.error.error,\n                    )}\n              </p>\n            </Message>\n          ) : null}\n\n          <Form.Button\n            primary\n            loading={isLoading}\n            disabled={isLoading}\n            fluid\n            onClick={onSubmit}\n            type=\"submit\"\n            className=\"submit-button\"\n          >\n            {global.translate('Connect').toUpperCase()}\n          </Form.Button>\n          <span className=\"from_login_link\">\n            <Link to=\"/reset-password\">\n              {global.translate(\n                'Forgot your Password or your PIN ?',\n                182,\n              )}\n            </Link>{' '}\n          </span>\n          <p>\n            {global.translate('Not yet registered?', 1200)}{' '}\n            <span className=\"from_login_link\">\n              <Link to=\"/register\">\n                {global.translate('Sign up')}\n              </Link>{' '}\n            </span>{' '}\n          </p>\n        </Form>\n      )}\n    </>\n  );\n};\n\nLoginForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  credentials: PropTypes.objectOf(PropTypes.any).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  error: PropTypes.objectOf(PropTypes.any),\n  pidError: PropTypes.string,\n  passwordError: PropTypes.string,\n  pinError: PropTypes.string,\n  isFormValid: PropTypes.bool,\n  clearLoginUser: PropTypes.func,\n};\n\nLoginForm.defaultProps = {\n  isLoading: false,\n  error: null,\n  pidError: null,\n  passwordError: null,\n  pinError: null,\n  isFormValid: false,\n  clearLoginUser: () => {},\n};\n\nexport default LoginForm;\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [geoData, setGeoData] = useState({});\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        res => {\n          const { latitude, longitude } = res.coords;\n          setGeoData({ latitude, longitude });\n        },\n        () => {\n          setGeoData({ latitude: 0, longitude: 0 });\n        },\n      );\n    }\n  }, []);\n\n  return geoData;\n};\n","import DeviceDetector from 'device-detector-js';\n\nexport default () => {\n  const deviceDetector = new DeviceDetector();\n  const { userAgent } = navigator;\n  const { os, client, device } = deviceDetector.parse(userAgent);\n  const getDeviceType = () => {\n    if (device.type === 'tablet') {\n      return 2;\n    }\n    if (os.name === 'GNU/Linux') {\n      return 6;\n    }\n    if (device.type === 'smartphone') {\n      return 1;\n    }\n    if (os.name === 'Windows') {\n      return 5;\n    }\n    if (os.name === 'Mac') {\n      return 4;\n    }\n    return 0;\n  };\n\n  return {\n    deviceType: getDeviceType(),\n    deviceOs: os.name,\n    clientName: client.name,\n    clientVersion: client.version,\n    osVersion: os.version,\n  };\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport loginUser, { clearLoginUser } from 'redux/actions/users/login';\nimport getUserLocationDataAction from 'redux/actions/users/userLocationData';\nimport Login from 'components/Login';\nimport useGeoLocation from './useGeoLocation';\nimport useDeviceType from './useDeviceType';\n\nconst LoginContainer = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const {\n    user: { userLocationData },\n  } = useSelector(state => state);\n\n  useEffect(() => {\n    if (!userLocationData?.CountryCode) {\n      getUserLocationDataAction()(dispatch);\n    }\n  }, []);\n\n  const [form, setForm] = useState({});\n  const [pidError, setPidError] = useState(null);\n  const [passwordError, setPasswordError] = useState(null);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [pinError, setPinError] = useState(null);\n  const { digit0, digit1, digit2, digit3 } = form;\n\n  const handleChange = (e, { name, value }) => {\n    setForm({ ...form, [name]: value });\n  };\n  const PIN = `${digit0}${digit1}${digit2}${digit3}`;\n\n  const geoData = useGeoLocation();\n  const {\n    deviceType,\n    deviceOs,\n    osVersion,\n    clientName,\n    clientVersion,\n  } = useDeviceType();\n\n  const body = {\n    PID: form.PID || '',\n    Password: form.Password || '',\n    PIN: PIN || '',\n    CountryCode:\n      (userLocationData && userLocationData.CountryCode) || '',\n    PhoneNumber: '',\n    IMEI: '',\n    SerialNumber: '',\n    DeviceOS: deviceOs || '',\n    Description: '2U Web Authentication',\n    OSVersion: osVersion || '',\n    MAC: 'Not found',\n    Roaming: '0',\n    DeviceType: deviceType,\n    AppType: 4,\n    Longitude: geoData.longitude || 0,\n    Latitude: geoData.latitude || 0,\n    ClientName: clientName,\n    ClientVersion: clientVersion,\n  };\n\n  const pinIsValid = () => body.PIN.length === 4;\n  useEffect(() => {\n    if (body.PID !== '' && body.Password !== '' && pinIsValid()) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n  }, [body]);\n\n  const { error, loading } = useSelector(\n    ({ user: { login } }) => login,\n  );\n  const { authData } = useSelector(state => state.user.currentUser);\n  useEffect(() => {\n    if (error) {\n      setForm({ ...form, digit0: '' });\n      setForm({ ...form, digit1: '' });\n      setForm({ ...form, digit2: '' });\n      setForm({ ...form, digit3: '' });\n    }\n  }, [error]);\n  useEffect(() => {\n    if (authData) {\n      if (authData.Result !== 'NO') {\n        history.push('/');\n      }\n    }\n  }, [authData, history]);\n\n  const handleSubmit = () => {\n    if (!body.PID.length > 0) {\n      setPidError('Please provide a valid Personal ID');\n      return;\n    }\n\n    setPidError(null);\n    if (!body.Password > 0) {\n      setPasswordError(\n        'Please provide a valid Password. It must contains at least 8 digits and at least one special character such as (!@#$%&*).',\n        46,\n      );\n      return;\n    }\n    setPasswordError(null);\n    if (body.PIN.length !== 4) {\n      setPinError(\n        global.translate('Please provide your PIN number.', 543),\n      );\n      return;\n    }\n    setPinError(null);\n    loginUser(body)(dispatch);\n  };\n\n  return (\n    <Login\n      credentials={form}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      loading={loading}\n      error={error}\n      setCredentials={setForm}\n      form={form}\n      pidError={pidError}\n      passwordError={passwordError}\n      pinError={pinError}\n      isFormValid={isFormValid}\n      clearLoginUser={clearLoginUser}\n    />\n  );\n};\n\nexport default LoginContainer;\n"],"sourceRoot":""}