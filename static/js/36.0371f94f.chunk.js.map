{"version":3,"sources":["redux/actions/users/getUserCurrencies.js","components/common/Dropdown/ReusableDropdown.jsx","components/VrtualCard/index.jsx","components/VrtualCard/PlaceHolder.jsx","components/VrtualCard/PlaceHolder.module.scss","components/VrtualCard/AddVirtualCardModal.jsx","components/VrtualCard/AddVirtualCardModal.module.scss","redux/actions/virtualCard/addVirtualCard.js","containers/VirtualCard/MyVirtualCards.jsx"],"names":["data","dispatch","apiAction","method","url","onStart","type","GET_USER_CURRENCIES_START","onSuccess","GET_USER_CURRENCIES_SUCCESS","payload","onFailure","error","GET_USER_CURRENCIES_ERROR","ReusableDrowdown","name","newCurrentOption","options","currentOption","onChange","search","setCurrentOption","disabled","placeholder","customstyle","newOptions","map","option","Flag","CountryName","Currency","Img","Title","CountryCode","PhoneAreaCode","OperatorName","Logo","OperatorID","Category","OperatorId","PhonePrefix","PhoneFlag","PhoneNumber","AccountNumber","AccountName","CurrencyCode","WalletQRCode","Default","wrapperId","Math","ceil","random","useState","filteredOptions","setFilteredOptions","open","setOpen","useEffect","checkClickInput","event","target","classList","id","document","addEventListener","removeEventListener","style","display","background","width","height","position","top","left","className","trigger","onClick","tabIndex","onKeyDown","role","src","icon","Menu","autoFocus","iconPosition","value","filter","toLowerCase","includes","scrolling","Item","key","defaultProps","MyVirtualCards","virtualCardList","isLoading","userData","currencies","onOptionsChange","onAddVirtualCard","selectedCurrency","setSelectedCurrency","selectedCard","setSelectedCard","virtualCardTypes","errors","setErrors","addVirtualCard","size","setSize","addMoneyOpen","setAddMoneyOpen","history","useHistory","myVirtualCardList","setMyVirtualCardList","isEmpty","setIsEmpty","virtualCard","RecordsCount","classes","LeftSide","global","translate","basic","color","onClickHandler","goBack","onKeyUp","e","persist","trim","length","found","item","CardNumber","startsWith","CardType","CardNumberSpaced","CVV","YYYY","Balance","CreationDate","handleKeyUp","VirtualCardList","Group","divided","link","textAlign","Description","handleOnClick","push","pathname","state","setRetriveMoneyOpen","VirtualCarlListPlaceHolder","PlaceHolder","Image","RightSide","fluid","Paragraph","Line","module","exports","AddVirtualCard","currencyOption","currency","index","Container","closeOnDocumentClick","closeOnDimmerClick","onClose","Header","Content","margin","selection","wrapSelection","message","Actions","loading","negative","positive","content","ADD_VIRTUAL_CARD_START","Result","ADD_VIRTUAL_CARD_SUCCESS","success","ADD_VIRTUAL_CARD_ERROR","clearAddVirtuaCard","CLEAR_ADD_VIRTUAL_CARD_STORE","MyVirtualCardsContainer","form","setForm","toastMessage","setToasMessage","useDispatch","useSelector","user","visaCardImg","masterCardImg","VirtualCard","getVirtualCard","getUserCurrencies","toast","createVirtualCard"],"mappings":"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","file":"static/js/36.0371f94f.chunk.js","sourcesContent":["import {\n  GET_USER_CURRENCIES_START,\n  GET_USER_CURRENCIES_SUCCESS,\n  GET_USER_CURRENCIES_ERROR,\n} from 'constants/action-types/users/getUserCurrencies';\nimport apiAction from 'helpers/apiAction';\n\nexport default data => dispatch =>\n  dispatch(\n    apiAction({\n      method: 'post',\n      url: '/UserCurrencyList',\n      data,\n      onStart: () => dispatch =>\n        dispatch({\n          type: GET_USER_CURRENCIES_START,\n        }),\n      onSuccess: data => dispatch => {\n        return dispatch({\n          type: GET_USER_CURRENCIES_SUCCESS,\n          payload: {\n            data,\n          },\n        });\n      },\n      onFailure: error => dispatch => {\n        return dispatch({\n          type: GET_USER_CURRENCIES_ERROR,\n          payload: {\n            error,\n          },\n        });\n      },\n    }),\n  );\n","/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable consistent-return */\nimport React, { useState, useEffect } from 'react';\nimport { Image, Dropdown, Icon, Input } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nimport './Dropdown.scss';\nimport Wrapper from 'hoc/Wrapper';\n\nconst ReusableDrowdown = ({\n  options,\n  currentOption,\n  onChange,\n  search,\n  setCurrentOption,\n  disabled,\n  placeholder,\n  customstyle,\n}) => {\n  let name;\n  const newOptions =\n    options &&\n    options.map(option => {\n      if (option.Flag && option.CountryName && option.Currency) {\n        name = 'CountryCode';\n        return {\n          Img: option.Flag,\n          Title: option.CountryName,\n          Currency: option.Currency,\n          CountryCode: option.CountryCode,\n          PhoneAreaCode: option.PhoneAreaCode,\n        };\n      }\n      if (\n        option.OperatorName &&\n        option.Logo &&\n        option.OperatorID &&\n        option.Category\n      ) {\n        name = 'OperatorName';\n        return {\n          Title: option.OperatorName,\n          Img: option.Logo,\n          OperatorId: option.OperatorID,\n          Category: option.Category,\n        };\n      }\n      if (\n        option.PhonePrefix &&\n        option.PhoneFlag &&\n        option.PhoneNumber\n      ) {\n        name = 'OperatorName';\n        return {\n          Title: `+${option.PhonePrefix} ${option.PhoneNumber}`,\n          Img: option.PhoneFlag,\n        };\n      }\n      if (\n        option.AccountNumber &&\n        option.AccountName &&\n        option.CurrencyCode &&\n        option.WalletQRCode\n      ) {\n        return {\n          Title: option.AccountName,\n          Img: option.Flag,\n          CurrencyCode: option.CurrencyCode,\n        };\n      }\n      if (option.Img && option.Title) {\n        return option;\n      }\n    });\n  let newCurrentOption;\n\n  if (currentOption && currentOption.OperatorID) {\n    newCurrentOption = {\n      Title: currentOption.OperatorName,\n      Img: currentOption.Logo,\n      OperatorID: currentOption.OperatorID,\n      Category: currentOption.Category,\n    };\n  } else if (currentOption && currentOption.CountryName) {\n    newCurrentOption = {\n      Title: currentOption.CountryName,\n      Img: currentOption.Flag,\n      Currency: currentOption.Currency,\n      CountryCode: currentOption.CountryCode,\n      PhoneAreaCode: currentOption.PhoneAreaCode,\n    };\n  } else if (\n    currentOption?.AccountName &&\n    currentOption?.Default &&\n    currentOption?.AccountNumber &&\n    currentOption?.WalletQRCode\n  ) {\n    newCurrentOption = {\n      Title: currentOption.AccountNumber,\n      Img: currentOption.Flag,\n      CurrencyCode: currentOption.CurrencyCode,\n    };\n  } else {\n    newCurrentOption = currentOption;\n  }\n\n  const wrapperId = `input-${Math.ceil(Math.random() * 10000)}`;\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setFilteredOptions(newOptions);\n  }, [options]);\n\n  const checkClickInput = event => {\n    const { target = {} } = event || {};\n    if (target.classList && target.id === wrapperId) {\n      return setOpen(false);\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', checkClickInput);\n    return () => {\n      document.removeEventListener('mousedown', checkClickInput);\n    };\n  });\n\n  return (\n    <>\n      <div\n        id={wrapperId}\n        style={{\n          display: open ? 'block' : 'none',\n          background: 'transparent',\n          width: '100%',\n          height: '100%',\n          position: 'fixed',\n          top: '0',\n          left: '0',\n        }}\n      />\n\n      <Dropdown\n        placeholder=\"Select\"\n        id={wrapperId}\n        disabled={disabled}\n        className=\"custom-dropdown\"\n        open={open}\n        trigger={\n          <span\n            className=\"dropdown-trigger\"\n            onClick={() => setOpen(!open)}\n            tabIndex={-1}\n            onKeyDown={() => setOpen(!open)}\n            role=\"button\"\n          >\n            <div className=\"dropdown-wallet\">\n              {!newCurrentOption ? (\n                <span>{placeholder}</span>\n              ) : (\n                <Wrapper>\n                  <Image\n                    src={newCurrentOption && newCurrentOption.Img}\n                    className=\"inline\"\n                  />\n                  <div>\n                    <div>\n                      {newCurrentOption && newCurrentOption.Title}\n                    </div>\n                  </div>\n                </Wrapper>\n              )}\n            </div>\n            {!disabled && (\n              <Icon name=\"caret down\" className=\"inline\" />\n            )}\n          </span>\n        }\n        icon={null}\n      >\n        <Dropdown.Menu\n          style={{ width: customstyle ? '100%' : 'auto' }}\n        >\n          {search && (\n            <Input\n              tabIndex={0}\n              icon=\"search\"\n              autoFocus\n              iconPosition=\"left\"\n              onChange={({ target: { value } }) => {\n                setFilteredOptions(\n                  newOptions.filter(({ Title }) =>\n                    Title.toLowerCase().includes(value.toLowerCase()),\n                  ),\n                );\n              }}\n            />\n          )}\n          <Dropdown.Menu scrolling search={search}>\n            {filteredOptions &&\n              filteredOptions.map(\n                ({\n                  Title,\n                  Img,\n                  OperatorID,\n                  Category,\n                  CountryCode,\n                  Currency,\n                }) => (\n                  <Dropdown.Item\n                    key={Title}\n                    onClick={() => {\n                      setOpen(false);\n                      onChange({\n                        target: {\n                          name,\n                          value: Title,\n                        },\n                      });\n                      setCurrentOption({\n                        Title,\n                        Img,\n                        OperatorID,\n                        Category,\n                        CountryCode,\n                        Currency,\n                      });\n                    }}\n                  >\n                    <span className=\"dropdown-trigger\">\n                      <div className=\"dropdown-wallet\">\n                        <Image src={Img} className=\"inline\" />\n                        <div>\n                          <div>{Title}</div>\n                        </div>\n                      </div>\n                    </span>\n                  </Dropdown.Item>\n                ),\n              )}\n          </Dropdown.Menu>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\n\nReusableDrowdown.defaultProps = {\n  options: [{}],\n  currentOption: {},\n  onChange: () => null,\n  search: false,\n  setCurrentOption: () => {},\n  disabled: false,\n  placeholder: '',\n  customstyle: false,\n};\n\nReusableDrowdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.instanceOf(Object)),\n  currentOption: PropTypes.instanceOf(Object),\n  onChange: PropTypes.func,\n  search: PropTypes.bool,\n  setCurrentOption: PropTypes.func,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  customstyle: PropTypes.bool,\n};\n\nexport default ReusableDrowdown;\n","/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Icon, Item, Input } from 'semantic-ui-react';\n\nimport DashboardLayout from 'components/common/DashboardLayout';\nimport WelcomeBar from 'components/Dashboard/WelcomeSection';\nimport GoBack from 'components/common/GoBack';\nimport Wrapper from 'hoc/Wrapper';\nimport classes from './VirtualCards.module.scss';\nimport VirtualCard from './Item';\nimport PlaceHolder from './PlaceHolder';\nimport AddVirtualCardModal from './AddVirtualCardModal';\n\nconst MyVirtualCards = ({\n  virtualCardList,\n  isLoading,\n  userData,\n  currencies,\n  onOptionsChange,\n  onAddVirtualCard,\n  selectedCurrency,\n  setSelectedCurrency,\n  selectedCard,\n  setSelectedCard,\n  virtualCardTypes,\n  errors,\n  setErrors,\n  addVirtualCard,\n  open,\n  setOpen,\n  size,\n  setSize,\n  addMoneyOpen,\n  setAddMoneyOpen,\n}) => {\n  const history = useHistory();\n  const [myVirtualCardList, setMyVirtualCardList] = useState([]);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const onClickHandler = () => history.goBack();\n  const handleOnClick = (item, userData) => {\n    history.push({\n      pathname: 'virtual-card-details',\n      state: { item, userData },\n    });\n  };\n  const handleModalOpen = () => {\n    setOpen(true);\n    setSize('tiny');\n  };\n  useEffect(() => {\n    if (virtualCardList) {\n      setMyVirtualCardList(\n        virtualCardList.filter(virtualCard => {\n          return virtualCard.RecordsCount !== '0';\n        }),\n      );\n    }\n  }, [virtualCardList]);\n\n  useEffect(() => {\n    if (virtualCardList) {\n      if (virtualCardList[0].RecordsCount === '0') {\n        setIsEmpty(true);\n      } else {\n        setIsEmpty(false);\n      }\n    }\n  }, [virtualCardList]);\n  const handleKeyUp = e => {\n    e.persist();\n    const search = e.target.value;\n    const data = virtualCardList;\n    if (search.trim().length > 0) {\n      const found = data.filter(\n        item =>\n          (item.CardNumber &&\n            item.CardNumber.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.CardType &&\n            item.CardType.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.CardNumberSpaced &&\n            item.CardNumberSpaced.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.CVV &&\n            item.CVV.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.YYYY &&\n            item.YYYY.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.Currency &&\n            item.Currency.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.Balance &&\n            item.Balance.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )) ||\n          (item.CreationDate &&\n            item.CreationDate.toLowerCase().startsWith(\n              search.toLowerCase(),\n            )),\n      );\n      setMyVirtualCardList(found);\n    } else if (virtualCardList) setMyVirtualCardList(virtualCardList);\n  };\n  return (\n    <>\n      <DashboardLayout>\n        <WelcomeBar>\n          <div className=\"contents\">\n            <div className={classes.LeftSide}>\n              {' '}\n              <span className=\"lighter\">\n                {global.translate('Manage My virtual card')}\n              </span>\n            </div>\n            <div className=\"right-contents right-button\">\n              {' '}\n              <Button onClick={handleModalOpen} basic color=\"orange\">\n                <Icon name=\"plus\" />{' '}\n                {global.translate(`Add a virtual card`)}\n              </Button>\n            </div>\n          </div>\n        </WelcomeBar>\n        <GoBack onClickHandler={onClickHandler} />\n        <div className=\"search-area\">\n          <Input\n            placeholder={global.translate('Search')}\n            icon=\"search\"\n            iconPosition=\"left\"\n            disabled={!virtualCardList}\n            onKeyUp={e => handleKeyUp(e)}\n          />\n        </div>\n        <div className={classes.VirtualCardList}>\n          {isLoading ? (\n            <Wrapper>\n              <PlaceHolder />\n              <PlaceHolder />\n              <PlaceHolder />\n            </Wrapper>\n          ) : (\n            <Item.Group divided link>\n              {isEmpty ||\n              (myVirtualCardList && !myVirtualCardList.length) ? (\n                <p style={{ textAlign: 'center' }}>\n                  {(virtualCardList &&\n                    virtualCardList[0].Description) ||\n                    global.translate(`No Item found`)}\n                </p>\n              ) : (\n                myVirtualCardList &&\n                myVirtualCardList.length !== 0 &&\n                myVirtualCardList.map(item => (\n                  <VirtualCard\n                    key={item.CardNumber}\n                    virtualCard={item}\n                    isLoading={isLoading}\n                    userData={userData?.data}\n                    addMoneyOpen={addMoneyOpen}\n                    setAddMoneyOpen={setAddMoneyOpen}\n                    handleOnClick={() => {\n                      handleOnClick(item, userData?.data);\n                    }}\n                  />\n                ))\n              )}\n            </Item.Group>\n          )}\n        </div>\n        <AddVirtualCardModal\n          open={open}\n          setOpen={setOpen}\n          size={size}\n          currencies={currencies}\n          onOptionsChange={onOptionsChange}\n          onAddVirtualCard={onAddVirtualCard}\n          selectedCurrency={selectedCurrency}\n          setSelectedCurrency={setSelectedCurrency}\n          selectedCard={selectedCard}\n          setSelectedCard={setSelectedCard}\n          virtualCardTypes={virtualCardTypes}\n          errors={errors}\n          setErrors={setErrors}\n          addVirtualCard={addVirtualCard}\n        />\n      </DashboardLayout>\n    </>\n  );\n};\n\nMyVirtualCards.propTypes = {\n  virtualCardList: PropTypes.instanceOf(Array).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  userData: PropTypes.instanceOf(Object).isRequired,\n  currencies: PropTypes.objectOf(PropTypes.any).isRequired,\n  onOptionsChange: PropTypes.func,\n  onAddVirtualCard: PropTypes.func,\n  setSelectedCard: PropTypes.func,\n  setSelectedCurrency: PropTypes.func,\n  selectedCurrency: PropTypes.string.isRequired,\n  selectedCard: PropTypes.string.isRequired,\n  virtualCardTypes: PropTypes.instanceOf(Array).isRequired,\n  errors: PropTypes.instanceOf(Object),\n  setErrors: PropTypes.func,\n  addVirtualCard: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func,\n  size: PropTypes.string.isRequired,\n  setSize: PropTypes.func,\n  setAddMoneyOpen: PropTypes.func,\n  setRetriveMoneyOpen: PropTypes.func,\n  addMoneyOpen: PropTypes.bool,\n};\n\nMyVirtualCards.defaultProps = {\n  onOptionsChange: () => {},\n  onAddVirtualCard: () => {},\n  setSelectedCard: () => {},\n  setSelectedCurrency: () => {},\n  setErrors: () => {},\n  addVirtualCard: () => {},\n  errors: {},\n  setOpen: () => {},\n  setSize: () => {},\n  setAddMoneyOpen: () => {},\n  setRetriveMoneyOpen: () => {},\n  addMoneyOpen: false,\n};\n\nexport default MyVirtualCards;\n","import React from 'react';\nimport { Placeholder } from 'semantic-ui-react';\nimport classes from './PlaceHolder.module.scss';\n\nconst VirtualCarlListPlaceHolder = () => (\n  <div className={classes.PlaceHolder}>\n    <div className={classes.LeftSide}>\n      <Placeholder style={{ height: 150, width: 150 }}>\n        <Placeholder.Image />\n      </Placeholder>\n    </div>\n    <div className={classes.RightSide}>\n      <Placeholder fluid>\n        <Placeholder.Paragraph>\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n        </Placeholder.Paragraph>\n      </Placeholder>\n    </div>\n  </div>\n);\n\nexport default VirtualCarlListPlaceHolder;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlaceHolder\":\"PlaceHolder_PlaceHolder__25xB7\",\"RightSide\":\"PlaceHolder_RightSide__1Ts56\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'semantic-ui-react';\nimport Message from 'components/common/Message';\nimport ReusableDrowdown from 'components/common/Dropdown/ReusableDropdown';\n\nimport classes from './AddVirtualCardModal.module.scss';\n\nconst AddVirtualCard = ({\n  open,\n  size,\n  setOpen,\n  currencies,\n  onOptionsChange,\n  onAddVirtualCard,\n  selectedCurrency,\n  setSelectedCurrency,\n  selectedCard,\n  setSelectedCard,\n  virtualCardTypes,\n  errors,\n  setErrors,\n  addVirtualCard,\n}) => {\n  const currencyOption = [];\n  if (currencies?.data?.length) {\n    currencies.data.map((currency, index) => {\n      return currencyOption.push({\n        key: index,\n        Title: currency.CurrencyCode,\n        value: currency.CurrencyCode,\n        Img: currency.Flag,\n      });\n    });\n  }\n  return (\n    <div className={classes.Container}>\n      <Modal\n        size={size}\n        open={open}\n        closeOnDocumentClick={false}\n        closeOnDimmerClick={false}\n        onClose={() => setOpen(false)}\n      >\n        <Modal.Header style={{ textAlign: 'center' }}>\n          Add a new virtual card\n        </Modal.Header>\n        <Modal.Content>\n          <div style={{ width: '55%', margin: 'auto' }}>\n            <span> Select a currency</span>\n            <ReusableDrowdown\n              customstyle\n              search\n              currentOption={selectedCurrency && selectedCurrency}\n              setCurrentOption={setSelectedCurrency}\n              options={currencyOption.length && currencyOption}\n              placeholder=\"Currency\"\n              onChange={e => {\n                onOptionsChange(e, {\n                  name: 'CurrencyCode',\n                  value: e.target.value,\n                });\n              }}\n            />\n          </div>\n\n          <div style={{ width: '55%', margin: 'auto' }}>\n            <span>Select the virtual card type</span>\n            <ReusableDrowdown\n              customstyle\n              fluid\n              currentOption={selectedCard && selectedCard}\n              setCurrentOption={setSelectedCard}\n              selection\n              wrapSelection={false}\n              options={virtualCardTypes && virtualCardTypes}\n              placeholder=\"Virtual card type\"\n              onChange={e => {\n                onOptionsChange(e, {\n                  name: 'VirtualCard',\n                  value: e.target.value,\n                });\n              }}\n            />\n            {errors && <Message message={errors} />}\n          </div>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            disabled={addVirtualCard && addVirtualCard.loading}\n            onClick={() => {\n              setOpen(false);\n              setSelectedCard(null);\n              setSelectedCurrency(null);\n              setErrors(null);\n            }}\n            negative\n          >\n            Cancel\n          </Button>\n          <Button\n            loading={addVirtualCard && addVirtualCard.loading}\n            positive\n            content=\"Add\"\n            onClick={() => onAddVirtualCard()}\n          />\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nAddVirtualCard.propTypes = {\n  open: PropTypes.bool,\n  size: PropTypes.string.isRequired,\n  setOpen: PropTypes.func,\n  currencies: PropTypes.objectOf(PropTypes.any).isRequired,\n  onOptionsChange: PropTypes.func,\n  onAddVirtualCard: PropTypes.func,\n  selectedCurrency: PropTypes.string.isRequired,\n  selectedCard: PropTypes.string.isRequired,\n  setSelectedCurrency: PropTypes.func,\n  setSelectedCard: PropTypes.func,\n  virtualCardTypes: PropTypes.instanceOf(Array).isRequired,\n  errors: PropTypes.string,\n  setErrors: PropTypes.func,\n  addVirtualCard: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nAddVirtualCard.defaultProps = {\n  open: false,\n  setOpen: () => {},\n  onOptionsChange: () => {},\n  onAddVirtualCard: () => {},\n  setSelectedCurrency: () => {},\n  setSelectedCard: () => {},\n  errors: '',\n  setErrors: () => {},\n};\n\nexport default AddVirtualCard;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Currencies\":\"AddVirtualCardModal_Currencies__1uR_R\"};","import {\n  ADD_VIRTUAL_CARD_START,\n  ADD_VIRTUAL_CARD_SUCCESS,\n  ADD_VIRTUAL_CARD_ERROR,\n  CLEAR_ADD_VIRTUAL_CARD_STORE,\n} from 'constants/action-types/virtual-card/addVirtualCard';\n\nimport apiAction from 'helpers/apiAction';\n\nexport default data => dispatch =>\n  dispatch(\n    apiAction({\n      method: 'post',\n      url: '/AddVirtualCard',\n      data,\n      onStart: () => dispatch =>\n        dispatch({\n          type: ADD_VIRTUAL_CARD_START,\n        }),\n      onSuccess: data => dispatch => {\n        if (data[0].Result === 'Success') {\n          return dispatch({\n            type: ADD_VIRTUAL_CARD_SUCCESS,\n            payload: {\n              ...data[0],\n              success: data[0].Result === 'Success',\n            },\n          });\n        }\n        return dispatch({\n          type: ADD_VIRTUAL_CARD_ERROR,\n          payload: {\n            ...data[0],\n          },\n        });\n      },\n      onFailure: error => dispatch => {\n        return dispatch({\n          type: ADD_VIRTUAL_CARD_ERROR,\n          payload: {\n            ...error[0],\n          },\n        });\n      },\n    }),\n  );\n\nexport const clearAddVirtuaCard = () => dispatch => {\n  return dispatch({\n    type: CLEAR_ADD_VIRTUAL_CARD_STORE,\n  });\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport getVirtualCard from 'redux/actions/virtualCard/getVirtualCard';\n\nimport MyVirtualCards from 'components/VrtualCard';\nimport getUserCurrencies from 'redux/actions/users/getUserCurrencies';\nimport visaCardImg from 'assets/images/visa-card.png';\nimport masterCardImg from 'assets/images/mastercard.png';\nimport createVirtualCard, {\n  clearAddVirtuaCard,\n} from 'redux/actions/virtualCard/addVirtualCard';\n\nconst MyVirtualCardsContainer = () => {\n  const [form, setForm] = useState({});\n  const [errors, setErrors] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [toastMessage, setToasMessage] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [size, setSize] = useState('');\n  const [addMoneyOpen, setAddMoneyOpen] = useState(false);\n\n  const dispatch = useDispatch();\n  const { userData, currencies } = useSelector(({ user }) => user);\n  const { virtualCardList, addVirtualCard } = useSelector(\n    ({ virtualCard }) => virtualCard,\n  );\n\n  const options = [\n    {\n      Title: 'Visa card',\n      Img: visaCardImg,\n    },\n    {\n      Title: 'Master card',\n      Img: masterCardImg,\n    },\n  ];\n  const onOptionsChange = (e, { name, value }) => {\n    setForm({ ...form, [name]: value });\n  };\n  const fetchVirtualCardList = () => {\n    if (!virtualCardList.data) {\n      getVirtualCard()(dispatch);\n    }\n  };\n  const fetchcurrencies = () => {\n    if (!currencies.data) {\n      getUserCurrencies()(dispatch);\n    }\n  };\n  useEffect(() => {\n    setSelectedCard(options[0]);\n  }, []);\n  useEffect(() => {\n    if (selectedCard) {\n      setForm({\n        ...form,\n        VirtualCard: selectedCard,\n      });\n    }\n  }, [selectedCard]);\n  useEffect(() => {\n    fetchVirtualCardList();\n    fetchcurrencies();\n  }, []);\n  useEffect(() => {\n    if (addVirtualCard?.data) {\n      setToasMessage(addVirtualCard?.data?.Description);\n    }\n  }, [addVirtualCard?.data]);\n\n  useEffect(() => {\n    if (addVirtualCard?.error) {\n      setToasMessage(addVirtualCard?.error?.Description);\n    }\n  }, [addVirtualCard?.error]);\n  useEffect(() => {\n    if (addVirtualCard?.data) {\n      toast.success(toastMessage);\n      setToasMessage(null);\n      setOpen(false);\n      setSelectedCard(null);\n      setSelectedCurrency(null);\n      clearAddVirtuaCard()(dispatch);\n    }\n  }, [toastMessage, addVirtualCard?.data]);\n\n  useEffect(() => {\n    if (addVirtualCard?.error) {\n      toast.error(toastMessage);\n\n      setSelectedCard(null);\n      setSelectedCurrency(null);\n      clearAddVirtuaCard()(dispatch);\n    }\n  }, [toastMessage]);\n  const onAddVirtualCard = () => {\n    const data = {\n      CardType: form?.VirtualCard?.Title === 'Visa card' ? '1' : '2',\n      Currency: form?.CurrencyCode,\n    };\n    if (!form?.VirtualCard) {\n      setErrors(\n        global.translate('Please provide the virtual card type.'),\n      );\n    }\n    if (!form?.CurrencyCode) {\n      setErrors(\n        global.translate('You did not select any currency.', 144),\n      );\n    }\n    setErrors(null);\n    createVirtualCard(data, '/AddVirtualCard')(dispatch);\n  };\n\n  return (\n    <MyVirtualCards\n      virtualCardList={virtualCardList?.data}\n      isLoading={virtualCardList.loading}\n      userData={userData}\n      currencies={currencies && currencies}\n      onOptionsChange={onOptionsChange}\n      selectedCard={selectedCard}\n      setSelectedCard={setSelectedCard}\n      selectedCurrency={selectedCurrency}\n      setSelectedCurrency={setSelectedCurrency}\n      virtualCardTypes={options}\n      onAddVirtualCard={onAddVirtualCard}\n      errors={errors}\n      setErrors={setErrors}\n      addVirtualCard={addVirtualCard}\n      open={open}\n      setOpen={setOpen}\n      size={size}\n      setSize={setSize}\n      addMoneyOpen={addMoneyOpen}\n      setAddMoneyOpen={setAddMoneyOpen}\n      form={form}\n    />\n  );\n};\n\nexport default MyVirtualCardsContainer;\n"],"sourceRoot":""}