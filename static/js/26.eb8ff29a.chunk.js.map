{"version":3,"sources":["../node_modules/device-detector-js/dist/utils/user-agent.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","../node_modules/device-detector-js/dist/utils/variable-replacement.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","../node_modules/device-detector-js/dist/utils/version.js","../node_modules/device-detector-js/dist/parsers/client/browser.js","../node_modules/device-detector-js/dist/utils/model.js","../node_modules/device-detector-js/dist/index.js","../node_modules/device-detector-js/dist/parsers/client/index.js","../node_modules/device-detector-js/dist/utils/trim.js","../node_modules/device-detector-js/dist/utils/memory-cache.js","../node_modules/device-detector-js/dist/parsers/client/mobile-apps.js","../node_modules/device-detector-js/dist/parsers/client/feed-readers.js","../node_modules/device-detector-js/dist/parsers/client/libraries.js","../node_modules/device-detector-js/dist/parsers/client/media-players.js","../node_modules/device-detector-js/dist/parsers/client/personal-information-managers.js","../node_modules/device-detector-js/dist/parsers/device/index.js","../node_modules/device-detector-js/dist/parsers/device/cameras.js","../node_modules/device-detector-js/dist/parsers/device/mobiles.js","../node_modules/device-detector-js/dist/parsers/device/televisions.js","../node_modules/device-detector-js/dist/parsers/device/cars.js","../node_modules/device-detector-js/dist/parsers/device/consoles.js","../node_modules/device-detector-js/dist/parsers/device/portable-media-players.js","../node_modules/device-detector-js/dist/parsers/operating-system/index.js","../node_modules/device-detector-js/dist/parsers/vendor-fragment/index.js","../node_modules/device-detector-js/dist/parsers/bot/index.js","../node_modules/device-detector-js/dist/utils/version-compare.js"],"names":["Object","defineProperty","exports","value","cache","require","memoryCache","userAgentParser","rawRegex","userAgent","match","cachedRegexInstance","get","regexInstance","RegExp","set","getRegexInstance","exec","slice","_a","GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","cx","useKeyOnly","useMultipleProp","useTextAlignProp","useValueAndKey","useVerticalAlignProp","useWidthProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","handledProps","propTypes","create","createShorthandFactory","variableReplacement","template","variables","regex","replace","index","parseInt","substr","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","useKeyOrValueAndKey","Column","Row","trim_1","formatVersion","version","versionTruncation","undefined","versionString","trim","versionParts","split","test","join","Number","isInteger","parseFloat","toFixed","length","parseBrowserEngineVersion","engine","pop","version_1","variable_replacement_1","user_agent_1","browsers","browserEngines","availableBrowsers","browserFamilies","mobileOnlyBrowsers","BrowserParser","options","this","parse","result","type","name","engineVersion","browser","vrpVersion","shortVersion","default","versions","sortedEngineVersions","entries","sort","a","b","versionThreshold","engineByVersion","browserEngine","assign","getBrowserShortName","browserName","shortName","getBrowserFamily","browserShortName","browserFamily","includes","isMobileOnlyBrowser","buildModel","model","__importDefault","mod","__esModule","client_1","device_1","operating_system_1","vendor_fragment_1","browser_1","BotParser","version_compare_1","module","skipBotDetection","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","client","clientParser","os","operatingSystemParser","device","deviceParser","bot","botParser","osName","osVersion","osFamily","getOsFamily","brand","vendorFragmentParser","createDeviceObject","hasAndroidTabletFragment","hasAndroidMobileFragment","versionCompare","isToucheEnabled","isDesktop","usesMobileBrowser","getDesktopOsArray","mobile_apps_1","feed_readers_1","libraries_1","media_players_1","personal_information_managers_1","clientParsers","Parser","str","char","memoryCacheBucket","key","hasOwnProperty","mobileApps","mobileApp","feedReaders","url","feedReader","libraries","library","mediaPlayers","mediaPlayer","personalInformationManagers","personalInformationManager","cameras_1","mobiles_1","televisions_1","cars_1","consoles_1","portable_media_players_1","deviceParsers","cameras","camera","models","modelMatch","model_1","mobiles","televisions","isHbbTv","television","cars","car","consoles","gameConsole","portableMediaPlayers","portableMediaPlayer","operatingSystems","desktopOsArray","shortOsNames","osFamilies","OperatingSystemParser","platform","parsePlatform","operatingSystem","osShortName","getOsShortName","vendorFragments","vendorFragment","bots","category","producer","v1","v2","operator","i","x","compare","vm","prepVersion","v","numVersion","isNaN","Math","max"],"mappings":"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","file":"static/js/26.eb8ff29a.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memory_cache_1 = require(\"./memory-cache\");\nconst cache = memory_cache_1.memoryCache();\nconst getRegexInstance = (rawRegex) => {\n    const cachedRegexInstance = cache.get(rawRegex);\n    if (cachedRegexInstance)\n        return cachedRegexInstance.value;\n    const regexInstance = RegExp(`(?:^|[^A-Z0-9-_]|[^A-Z0-9-]_|sprd-)(?:${rawRegex})`, \"i\");\n    cache.set(rawRegex, {\n        value: regexInstance\n    });\n    return regexInstance;\n};\nexports.userAgentParser = (rawRegex, userAgent) => {\n    // TODO: find out why it fails in some browsers\n    try {\n        const regexInstance = getRegexInstance(rawRegex);\n        const match = regexInstance.exec(userAgent);\n        return match ? match.slice(1) : null;\n    }\n    catch (_a) {\n        return null;\n    }\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.variableReplacement = (template, variables) => {\n    const regex = new RegExp(`\\\\$\\\\d`, \"g\");\n    if (template === null)\n        return \"\";\n    return template.replace(regex, (match) => {\n        const index = parseInt(match.substr(1), 10);\n        const variable = variables[index - 1];\n        return variable || \"\";\n    });\n};\n","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trim_1 = require(\"./trim\");\nexports.formatVersion = (version, versionTruncation) => {\n    if (version === undefined)\n        return \"\";\n    const versionString = trim_1.trim(version, \". \").replace(new RegExp(\"_\", \"g\"), \".\");\n    const versionParts = versionString.split(\".\");\n    // Return if the string is not only digits once we removed the dots\n    if (!/^\\d+$/.test(versionParts.join(\"\"))) {\n        return versionString;\n    }\n    if (versionTruncation !== 0) {\n        if (Number.isInteger(parseFloat(versionString))) {\n            return parseInt(versionString, 10).toFixed(1);\n        }\n    }\n    if (versionParts.length > 1) {\n        if (versionTruncation !== null) {\n            return versionParts.slice(0, versionTruncation + 1).join(\".\");\n        }\n    }\n    return versionString;\n};\nexports.parseBrowserEngineVersion = (userAgent, engine) => {\n    if (!engine)\n        return \"\";\n    const regex = new RegExp(`${engine}\\\\s*\\\\/?\\\\s*((?:(?=\\\\d+\\\\.\\\\d)\\\\d+[.\\\\d]*|\\\\d{1,7}(?=(?:\\\\D|$))))`, \"i\");\n    const match = userAgent.match(regex);\n    if (!match)\n        return \"\";\n    return match.pop();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst browsers = require(\"../../../fixtures/regexes/client/browsers.json\");\nconst browserEngines = require(\"../../../fixtures/regexes/client/browser_engine.json\");\nconst availableBrowsers = { \"2B\": \"2345 Browser\", \"36\": \"360 Phone Browser\", \"3B\": \"360 Browser\", \"AA\": \"Avant Browser\", \"AB\": \"ABrowse\", \"AF\": \"ANT Fresco\", \"AG\": \"ANTGalio\", \"AL\": \"Aloha Browser\", \"AH\": \"Aloha Browser Lite\", \"AM\": \"Amaya\", \"AO\": \"Amigo\", \"AN\": \"Android Browser\", \"AD\": \"AOL Shield\", \"AR\": \"Arora\", \"AV\": \"Amiga Voyager\", \"AW\": \"Amiga Aweb\", \"AT\": \"Atomic Web Browser\", \"AS\": \"Avast Secure Browser\", \"VG\": \"AVG Secure Browser\", \"BA\": \"Beaker Browser\", \"BM\": \"Beamrise\", \"BB\": \"BlackBerry Browser\", \"BD\": \"Baidu Browser\", \"BS\": \"Baidu Spark\", \"BI\": \"Basilisk\", \"BE\": \"Beonex\", \"BH\": \"BlackHawk\", \"BJ\": \"Bunjalloo\", \"BL\": \"B-Line\", \"BR\": \"Brave\", \"BK\": \"BriskBard\", \"BX\": \"BrowseX\", \"CA\": \"Camino\", \"CL\": \"CCleaner\", \"CC\": \"Coc Coc\", \"CD\": \"Comodo Dragon\", \"C1\": \"Coast\", \"CX\": \"Charon\", \"CE\": \"CM Browser\", \"CF\": \"Chrome Frame\", \"HC\": \"Headless Chrome\", \"CH\": \"Chrome\", \"CI\": \"Chrome Mobile iOS\", \"CK\": \"Conkeror\", \"CM\": \"Chrome Mobile\", \"CN\": \"CoolNovo\", \"CO\": \"CometBird\", \"CB\": \"COS Browser\", \"CP\": \"ChromePlus\", \"CR\": \"Chromium\", \"CY\": \"Cyberfox\", \"CS\": \"Cheshire\", \"CT\": \"Crusta\", \"CU\": \"Cunaguaro\", \"CV\": \"Chrome Webview\", \"DB\": \"dbrowser\", \"DE\": \"Deepnet Explorer\", \"DT\": \"Delta Browser\", \"DF\": \"Dolphin\", \"DO\": \"Dorado\", \"DL\": \"Dooble\", \"DI\": \"Dillo\", \"DD\": \"DuckDuckGo Privacy Browser\", \"EC\": \"Ecosia\", \"EI\": \"Epic\", \"EL\": \"Elinks\", \"EB\": \"Element Browser\", \"EZ\": \"eZ Browser\", \"EU\": \"EUI Browser\", \"EP\": \"GNOME Web\", \"ES\": \"Espial TV Browser\", \"FA\": \"Falkon\", \"FX\": \"Faux Browser\", \"F1\": \"Firefox Mobile iOS\", \"FB\": \"Firebird\", \"FD\": \"Fluid\", \"FE\": \"Fennec\", \"FF\": \"Firefox\", \"FK\": \"Firefox Focus\", \"FY\": \"Firefox Reality\", \"FR\": \"Firefox Rocket\", \"FL\": \"Flock\", \"FM\": \"Firefox Mobile\", \"FW\": \"Fireweb\", \"FN\": \"Fireweb Navigator\", \"FU\": \"FreeU\", \"GA\": \"Galeon\", \"GE\": \"Google Earth\", \"HA\": \"Hawk Turbo Browser\", \"HO\": \"hola! Browser\", \"HJ\": \"HotJava\", \"HU\": \"Huawei Browser\", \"IB\": \"IBrowse\", \"IC\": \"iCab\", \"I2\": \"iCab Mobile\", \"I1\": \"Iridium\", \"I3\": \"Iron Mobile\", \"I4\": \"IceCat\", \"ID\": \"IceDragon\", \"IV\": \"Isivioo\", \"IW\": \"Iceweasel\", \"IE\": \"Internet Explorer\", \"IM\": \"IE Mobile\", \"IR\": \"Iron\", \"JS\": \"Jasmine\", \"JI\": \"Jig Browser\", \"JO\": \"Jio Browser\", \"KB\": \"K.Browser\", \"KI\": \"Kindle Browser\", \"KM\": \"K-meleon\", \"KO\": \"Konqueror\", \"KP\": \"Kapiko\", \"KN\": \"Kinza\", \"KW\": \"Kiwi\", \"KY\": \"Kylo\", \"KZ\": \"Kazehakase\", \"LB\": \"Cheetah Browser\", \"LF\": \"LieBaoFast\", \"LG\": \"LG Browser\", \"LI\": \"Links\", \"LO\": \"Lovense Browser\", \"LU\": \"LuaKit\", \"LS\": \"Lunascape\", \"LX\": \"Lynx\", \"M1\": \"mCent\", \"MB\": \"MicroB\", \"MC\": \"NCSA Mosaic\", \"MZ\": \"Meizu Browser\", \"ME\": \"Mercury\", \"MF\": \"Mobile Safari\", \"MI\": \"Midori\", \"MO\": \"Mobicip\", \"MU\": \"MIUI Browser\", \"MS\": \"Mobile Silk\", \"MN\": \"Minimo\", \"MT\": \"Mint Browser\", \"MX\": \"Maxthon\", \"NB\": \"Nokia Browser\", \"NO\": \"Nokia OSS Browser\", \"NV\": \"Nokia Ovi Browser\", \"NX\": \"Nox Browser\", \"NE\": \"NetSurf\", \"NF\": \"NetFront\", \"NL\": \"NetFront Life\", \"NP\": \"NetPositive\", \"NS\": \"Netscape\", \"NT\": \"NTENT Browser\", \"OC\": \"Oculus Browser\", \"O1\": \"Opera Mini iOS\", \"OB\": \"Obigo\", \"OD\": \"Odyssey Web Browser\", \"OF\": \"Off By One\", \"OE\": \"ONE Browser\", \"OX\": \"Opera GX\", \"OG\": \"Opera Neon\", \"OH\": \"Opera Devices\", \"OI\": \"Opera Mini\", \"OM\": \"Opera Mobile\", \"OP\": \"Opera\", \"ON\": \"Opera Next\", \"OO\": \"Opera Touch\", \"OS\": \"Ordissimo\", \"OR\": \"Oregano\", \"OY\": \"Origyn Web Browser\", \"OV\": \"Openwave Mobile Browser\", \"OW\": \"OmniWeb\", \"OT\": \"Otter Browser\", \"PL\": \"Palm Blazer\", \"PM\": \"Pale Moon\", \"PP\": \"Oppo Browser\", \"PR\": \"Palm Pre\", \"PU\": \"Puffin\", \"PW\": \"Palm WebPro\", \"PA\": \"Palmscape\", \"PX\": \"Phoenix\", \"PO\": \"Polaris\", \"PT\": \"Polarity\", \"PS\": \"Microsoft Edge\", \"Q1\": \"QQ Browser Mini\", \"QQ\": \"QQ Browser\", \"QT\": \"Qutebrowser\", \"QZ\": \"QupZilla\", \"QM\": \"Qwant Mobile\", \"QW\": \"QtWebEngine\", \"RE\": \"Realme Browser\", \"RK\": \"Rekonq\", \"RM\": \"RockMelt\", \"SB\": \"Samsung Browser\", \"SA\": \"Sailfish Browser\", \"SC\": \"SEMC-Browser\", \"SE\": \"Sogou Explorer\", \"SF\": \"Safari\", \"SW\": \"SalamWeb\", \"SH\": \"Shiira\", \"S1\": \"SimpleBrowser\", \"SK\": \"Skyfire\", \"SS\": \"Seraphic Sraf\", \"SL\": \"Sleipnir\", \"SN\": \"Snowshoe\", \"SO\": \"Sogou Mobile Browser\", \"S2\": \"Splash\", \"SI\": \"Sputnik Browser\", \"SR\": \"Sunrise\", \"SP\": \"SuperBird\", \"SU\": \"Super Fast Browser\", \"S0\": \"START Internet Browser\", \"ST\": \"Streamy\", \"SX\": \"Swiftfox\", \"SZ\": \"Seznam Browser\", \"TO\": \"t-online.de Browser\", \"TA\": \"Tao Browser\", \"TF\": \"TenFourFox\", \"TB\": \"Tenta Browser\", \"TZ\": \"Tizen Browser\", \"TS\": \"TweakStyle\", \"UB\": \"UBrowser\", \"UC\": \"UC Browser\", \"UM\": \"UC Browser Mini\", \"UT\": \"UC Browser Turbo\", \"UZ\": \"Uzbl\", \"VI\": \"Vivaldi\", \"VV\": \"vivo Browser\", \"VB\": \"Vision Mobile Browser\", \"WI\": \"Wear Internet Browser\", \"WP\": \"Web Explorer\", \"WE\": \"WebPositive\", \"WF\": \"Waterfox\", \"WH\": \"Whale Browser\", \"WO\": \"wOSBrowser\", \"WT\": \"WeTab Browser\", \"YA\": \"Yandex Browser\", \"YL\": \"Yandex Browser Lite\", \"XI\": \"Xiino\" };\nconst browserFamilies = { \"Android Browser\": [\"AN\", \"MU\"], \"BlackBerry Browser\": [\"BB\"], \"Baidu\": [\"BD\", \"BS\"], \"Amiga\": [\"AV\", \"AW\"], \"Chrome\": [\"CH\", \"BA\", \"BR\", \"CC\", \"CD\", \"CM\", \"CI\", \"CF\", \"CN\", \"CR\", \"CP\", \"DD\", \"IR\", \"RM\", \"AO\", \"TS\", \"VI\", \"PT\", \"AS\", \"TB\", \"AD\", \"SB\", \"WP\", \"I3\", \"CV\", \"WH\", \"SZ\", \"QW\", \"LF\", \"KW\", \"2B\", \"CE\", \"EC\", \"MT\", \"MS\", \"HA\", \"OC\", \"MZ\", \"BM\", \"KN\", \"SW\", \"M1\", \"FA\", \"TA\", \"AH\", \"CL\", \"SU\", \"EU\", \"UB\", \"LO\", \"VG\"], \"Firefox\": [\"FF\", \"FE\", \"FM\", \"SX\", \"FB\", \"PX\", \"MB\", \"EI\", \"WF\", \"CU\", \"TF\", \"QM\", \"FR\", \"I4\", \"GZ\", \"MO\", \"F1\", \"BI\", \"MN\", \"BH\", \"TO\", \"OS\", \"FY\"], \"Internet Explorer\": [\"IE\", \"IM\", \"PS\"], \"Konqueror\": [\"KO\"], \"NetFront\": [\"NF\"], \"NetSurf\": [\"NE\"], \"Nokia Browser\": [\"NB\", \"NO\", \"NV\", \"DO\"], \"Opera\": [\"OP\", \"OM\", \"OI\", \"ON\", \"OO\", \"OG\", \"OH\", \"O1\", \"OX\"], \"Safari\": [\"SF\", \"MF\", \"SO\"], \"Sailfish Browser\": [\"SA\"] };\nconst mobileOnlyBrowsers = [\"36\", \"OC\", \"PU\", \"SK\", \"MF\", \"OI\", \"OM\", \"DD\", \"DB\", \"ST\", \"BL\", \"IV\", \"FM\", \"C1\", \"AL\", \"SA\", \"SB\", \"FR\", \"WP\", \"HA\", \"NX\", \"HU\", \"VV\", \"RE\", \"CB\", \"MZ\", \"UM\", \"FK\", \"FX\", \"WI\", \"MN\", \"M1\", \"AH\", \"SU\", \"EU\", \"EZ\", \"UT\", \"DT\", \"S0\"];\nclass BrowserParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                engine: \"\",\n                engineVersion: \"\"\n            };\n            for (const browser of browsers) {\n                const match = user_agent_1.userAgentParser(browser.regex, userAgent);\n                if (!match)\n                    continue;\n                const vrpVersion = variable_replacement_1.variableReplacement(browser.version, match);\n                const version = version_1.formatVersion(vrpVersion, this.options.versionTruncation);\n                const shortVersion = version && parseFloat(version_1.formatVersion(vrpVersion, 1)) || \"\";\n                if (browser.engine) {\n                    result.engine = browser.engine.default;\n                    if (browser.engine && browser.engine.versions && shortVersion) {\n                        const sortedEngineVersions = Object.entries(browser.engine.versions).sort((a, b) => {\n                            return parseFloat(a[0]) > parseFloat(b[0]) ? 1 : -1;\n                        });\n                        for (const [versionThreshold, engineByVersion] of sortedEngineVersions) {\n                            if (parseFloat(versionThreshold) <= shortVersion) {\n                                result.engine = engineByVersion;\n                            }\n                        }\n                    }\n                }\n                result.type = \"browser\";\n                result.name = variable_replacement_1.variableReplacement(browser.name, match);\n                result.version = version;\n                break;\n            }\n            if (!result.engine) {\n                for (const browserEngine of browserEngines) {\n                    const match = RegExp(browserEngine.regex, \"i\").exec(userAgent);\n                    if (!match)\n                        continue;\n                    result.engine = browserEngine.name;\n                    break;\n                }\n            }\n            result.engineVersion = version_1.formatVersion(version_1.parseBrowserEngineVersion(userAgent, result.engine), this.options.versionTruncation);\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = BrowserParser;\nBrowserParser.getBrowserShortName = (browserName) => {\n    for (const [shortName, name] of Object.entries(availableBrowsers)) {\n        if (name === browserName) {\n            return shortName;\n        }\n    }\n    return \"\";\n};\nBrowserParser.getBrowserFamily = (browserName) => {\n    const browserShortName = BrowserParser.getBrowserShortName(browserName);\n    for (const [browserFamily, browserLabels] of Object.entries(browserFamilies)) {\n        if (browserLabels.includes(browserShortName))\n            return browserFamily;\n    }\n    return \"\";\n};\nBrowserParser.isMobileOnlyBrowser = (browserName) => {\n    return mobileOnlyBrowsers.includes(BrowserParser.getBrowserShortName(browserName));\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildModel = (model) => {\n    model = model.replace(/_/g, \" \");\n    model = model.replace(RegExp(\" TD$\", \"i\"), \"\");\n    if (model === \"Build\")\n        return \"\";\n    return model;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst client_1 = __importDefault(require(\"./parsers/client\"));\nconst device_1 = __importDefault(require(\"./parsers/device\"));\nconst operating_system_1 = __importDefault(require(\"./parsers/operating-system\"));\nconst vendor_fragment_1 = __importDefault(require(\"./parsers/vendor-fragment\"));\nconst browser_1 = __importDefault(require(\"./parsers/client/browser\"));\nconst BotParser = require(\"./parsers/bot\");\nconst user_agent_1 = require(\"./utils/user-agent\");\nconst version_compare_1 = require(\"./utils/version-compare\");\nclass DeviceDetector {\n    constructor(options) {\n        // Default options\n        this.options = {\n            skipBotDetection: false,\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n            const result = {\n                client: this.clientParser.parse(userAgent),\n                os: this.operatingSystemParser.parse(userAgent),\n                device: this.deviceParser.parse(userAgent),\n                bot: this.options.skipBotDetection ? null : this.botParser.parse(userAgent)\n            };\n            const osName = (_a = result.os) === null || _a === void 0 ? void 0 : _a.name;\n            const osVersion = (_b = result.os) === null || _b === void 0 ? void 0 : _b.version;\n            const osFamily = operating_system_1.default.getOsFamily(osName || \"\");\n            if (!((_c = result.device) === null || _c === void 0 ? void 0 : _c.brand)) {\n                const brand = this.vendorFragmentParser.parse(userAgent);\n                if (brand) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.brand = brand;\n                }\n            }\n            /**\n             * Assume all devices running iOS / Mac OS are from Apple\n             */\n            if (!((_d = result.device) === null || _d === void 0 ? void 0 : _d.brand) && [\"Apple TV\", \"iOS\", \"Mac\"].includes(osName || \"\")) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.brand = \"Apple\";\n            }\n            /**\n             * Chrome on Android passes the device type based on the keyword 'Mobile'\n             * If it is present the device should be a smartphone, otherwise it's a tablet\n             * See https://developer.chrome.com/multidevice/user-agent#chrome_for_android_user_agent\n             */\n            if (!((_e = result.device) === null || _e === void 0 ? void 0 : _e.type) && osFamily === \"Android\" && browser_1.default.getBrowserFamily(((_f = result.client) === null || _f === void 0 ? void 0 : _f.name) || \"\") === \"Chrome\") {\n                if (user_agent_1.userAgentParser(\"Chrome/[.0-9]* Mobile\", userAgent)) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"smartphone\";\n                }\n                else if (user_agent_1.userAgentParser(\"Chrome/[.0-9]* (?!Mobile)\", userAgent)) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"tablet\";\n                }\n            }\n            /**\n             * Some user agents simply contain the fragment 'Android; Tablet;' or 'Opera Tablet', so we assume those devices are tablets\n             */\n            if (!((_g = result.device) === null || _g === void 0 ? void 0 : _g.type) && this.hasAndroidTabletFragment(userAgent) || user_agent_1.userAgentParser(\"Opera Tablet\", userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"tablet\";\n            }\n            /**\n             * Some user agents simply contain the fragment 'Android; Mobile;', so we assume those devices are smartphones\n             */\n            if (!((_h = result.device) === null || _h === void 0 ? void 0 : _h.type) && this.hasAndroidMobileFragment(userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"smartphone\";\n            }\n            /**\n             * Android up to 3.0 was designed for smartphones only. But as 3.0, which was tablet only, was published\n             * too late, there were a bunch of tablets running with 2.x\n             * With 4.0 the two trees were merged and it is for smartphones and tablets\n             *\n             * So were are expecting that all devices running Android < 2 are smartphones\n             * Devices running Android 3.X are tablets. Device type of Android 2.X and 4.X+ are unknown\n             */\n            if (!((_j = result.device) === null || _j === void 0 ? void 0 : _j.type) && osName === \"Android\" && osVersion !== \"\") {\n                if (version_compare_1.versionCompare(osVersion, \"2.0\") === -1) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"smartphone\";\n                }\n                else if (version_compare_1.versionCompare(osVersion, \"3.0\") >= 0 && version_compare_1.versionCompare(osVersion, \"4.0\") === -1) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"tablet\";\n                }\n            }\n            /**\n             * All detected feature phones running android are more likely smartphones\n             */\n            if (result.device && ((_k = result.device) === null || _k === void 0 ? void 0 : _k.type) === \"feature phone\" && osFamily === \"Android\") {\n                result.device.type = \"smartphone\";\n            }\n            /**\n             * According to http://msdn.microsoft.com/en-us/library/ie/hh920767(v=vs.85).aspx\n             * Internet Explorer 10 introduces the \"Touch\" UA string token. If this token is present at the end of the\n             * UA string, the computer has touch capability, and is running Windows 8 (or later).\n             * This UA string will be transmitted on a touch-enabled system running Windows 8 (RT)\n             *\n             * As most touch enabled devices are tablets and only a smaller part are desktops/notebooks we assume that\n             * all Windows 8 touch devices are tablets.\n             */\n            if (!((_l = result.device) === null || _l === void 0 ? void 0 : _l.type)\n                && this.isToucheEnabled(userAgent)\n                && (osName === \"Windows RT\"\n                    || (osName === \"Windows\"\n                        && version_compare_1.versionCompare(osVersion, \"8.0\") >= 0))) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"tablet\";\n            }\n            /**\n             * All devices running Opera TV Store are assumed to be televisions\n             */\n            if (user_agent_1.userAgentParser(\"Opera TV Store\", userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"television\";\n            }\n            /**\n             * Devices running Kylo or Espital TV Browsers are assumed to be televisions\n             */\n            if (!((_m = result.device) === null || _m === void 0 ? void 0 : _m.type) && [\"Kylo\", \"Espial TV Browser\"].includes(((_o = result.client) === null || _o === void 0 ? void 0 : _o.name) || \"\")) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"television\";\n            }\n            // set device type to desktop for all devices running a desktop os that were not detected as an other device type\n            if (!((_p = result.device) === null || _p === void 0 ? void 0 : _p.type) && this.isDesktop(result, osFamily)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"desktop\";\n            }\n            return result;\n        };\n        this.hasAndroidMobileFragment = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Android( [\\.0-9]+)?; Mobile;\", userAgent);\n        };\n        this.hasAndroidTabletFragment = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Android( [\\.0-9]+)?; Tablet;\", userAgent);\n        };\n        this.isDesktop = (result, osFamily) => {\n            if (!result.os) {\n                return false;\n            }\n            // Check for browsers available for mobile devices only\n            if (this.usesMobileBrowser(result.client)) {\n                return false;\n            }\n            return operating_system_1.default.getDesktopOsArray().includes(osFamily);\n        };\n        this.usesMobileBrowser = (client) => {\n            var _a, _b;\n            if (!client)\n                return false;\n            return ((_a = client) === null || _a === void 0 ? void 0 : _a.type) === \"browser\" && browser_1.default.isMobileOnlyBrowser((_b = client) === null || _b === void 0 ? void 0 : _b.name);\n        };\n        this.isToucheEnabled = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Touch\", userAgent);\n        };\n        this.createDeviceObject = () => ({\n            type: \"\",\n            brand: \"\",\n            model: \"\"\n        });\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.clientParser = new client_1.default(this.options);\n        this.deviceParser = new device_1.default();\n        this.operatingSystemParser = new operating_system_1.default(this.options);\n        this.vendorFragmentParser = new vendor_fragment_1.default();\n        this.botParser = new BotParser();\n    }\n}\nmodule.exports = DeviceDetector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst browser_1 = __importDefault(require(\"./browser\"));\nconst mobile_apps_1 = __importDefault(require(\"./mobile-apps\"));\nconst feed_readers_1 = __importDefault(require(\"./feed-readers\"));\nconst libraries_1 = __importDefault(require(\"./libraries\"));\nconst media_players_1 = __importDefault(require(\"./media-players\"));\nconst personal_information_managers_1 = __importDefault(require(\"./personal-information-managers\"));\nconst clientParsers = [\n    feed_readers_1.default,\n    mobile_apps_1.default,\n    media_players_1.default,\n    personal_information_managers_1.default,\n    browser_1.default,\n    libraries_1.default\n];\nclass ClientParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            for (const Parser of clientParsers) {\n                const parser = new Parser(this.options);\n                const client = parser.parse(userAgent);\n                if (client.type !== \"\")\n                    return client;\n            }\n            return null;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = ClientParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trim = (str, char) => {\n    return str.replace(new RegExp(\"^[\" + char + \"]+|[\" + char + \"]+$\", \"g\"), \"\");\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoryCache = () => {\n    const memoryCacheBucket = {};\n    const set = (key, value) => {\n        memoryCacheBucket[key] = value;\n    };\n    const get = (key) => {\n        if (memoryCacheBucket.hasOwnProperty(key)) {\n            return memoryCacheBucket[key];\n        }\n    };\n    return {\n        set,\n        get\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst mobileApps = require(\"../../../fixtures/regexes/client/mobile_apps.json\");\nclass MobileAppParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const mobileApp of mobileApps) {\n                const match = user_agent_1.userAgentParser(mobileApp.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"mobile app\";\n                result.name = variable_replacement_1.variableReplacement(mobileApp.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(mobileApp.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = MobileAppParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst feedReaders = require(\"../../../fixtures/regexes/client/feed_readers.json\");\nclass FeedReaderParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const feedReader of feedReaders) {\n                const match = user_agent_1.userAgentParser(feedReader.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"feed reader\";\n                result.name = variable_replacement_1.variableReplacement(feedReader.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(feedReader.version, match), this.options.versionTruncation);\n                result.url = feedReader.url;\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = FeedReaderParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst libraries = require(\"../../../fixtures/regexes/client/libraries.json\");\nclass LibraryParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const library of libraries) {\n                const match = user_agent_1.userAgentParser(library.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"library\";\n                result.name = variable_replacement_1.variableReplacement(library.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(library.version, match), this.options.versionTruncation);\n                result.url = library.url || \"\";\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = LibraryParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst mediaPlayers = require(\"../../../fixtures/regexes/client/mediaplayers.json\");\nclass MediaPlayerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const mediaPlayer of mediaPlayers) {\n                const match = user_agent_1.userAgentParser(mediaPlayer.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"media player\";\n                result.name = variable_replacement_1.variableReplacement(mediaPlayer.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(mediaPlayer.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = MediaPlayerParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst personalInformationManagers = require(\"../../../fixtures/regexes/client/pim.json\");\nclass PersonalInformationManagerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const personalInformationManager of personalInformationManagers) {\n                const match = user_agent_1.userAgentParser(personalInformationManager.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"personal information manager\";\n                result.name = variable_replacement_1.variableReplacement(personalInformationManager.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(personalInformationManager.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = PersonalInformationManagerParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cameras_1 = __importDefault(require(\"./cameras\"));\nconst mobiles_1 = __importDefault(require(\"./mobiles\"));\nconst televisions_1 = __importDefault(require(\"./televisions\"));\nconst cars_1 = __importDefault(require(\"./cars\"));\nconst consoles_1 = __importDefault(require(\"./consoles\"));\nconst portable_media_players_1 = __importDefault(require(\"./portable-media-players\"));\nconst deviceParsers = [\n    consoles_1.default,\n    cars_1.default,\n    cameras_1.default,\n    televisions_1.default,\n    portable_media_players_1.default,\n    mobiles_1.default\n];\nclass ClientParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const Parser of deviceParsers) {\n                const parser = new Parser();\n                const device = parser.parse(userAgent);\n                if (device.type !== \"\") {\n                    return device;\n                }\n            }\n            return null;\n        };\n    }\n}\nexports.default = ClientParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst cameras = require(\"../../../fixtures/regexes/device/cameras.json\");\nclass CameraParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, camera] of Object.entries(cameras)) {\n                const match = user_agent_1.userAgentParser(camera.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"camera\";\n                result.brand = brand;\n                if (camera.model) {\n                    result.model = variable_replacement_1.variableReplacement(camera.model, match).trim();\n                }\n                else if (camera.models) {\n                    for (const model of camera.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = CameraParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nconst mobiles = require(\"../../../fixtures/regexes/device/mobiles.json\");\nclass MobileParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, mobile] of Object.entries(mobiles)) {\n                const match = user_agent_1.userAgentParser(mobile.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = mobile.device;\n                result.brand = brand;\n                if (mobile.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(mobile.model, match)).trim();\n                }\n                else if (mobile.models) {\n                    for (const model of mobile.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = model_1.buildModel(variable_replacement_1.variableReplacement(model.model, modelMatch)).trim();\n                        if (model.device) {\n                            result.type = model.device;\n                        }\n                        if (model.brand) {\n                            result.brand = model.brand;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n            // Sanitize device type\n            if (result.type === \"tv\") {\n                result.type = result.type.replace(\"tv\", \"television\");\n            }\n            // Sanitize device brand\n            if (result.brand === \"Unknown\") {\n                result.brand = \"\";\n            }\n            return result;\n        };\n    }\n}\nexports.default = MobileParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nconst televisions = require(\"../../../fixtures/regexes/device/televisions.json\");\nclass TelevisionParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            if (!this.isHbbTv(userAgent))\n                return result;\n            result.type = \"television\";\n            for (const [brand, television] of Object.entries(televisions)) {\n                const match = user_agent_1.userAgentParser(television.regex, userAgent);\n                if (!match)\n                    continue;\n                result.brand = brand;\n                if (television.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(television.model, match)).trim();\n                }\n                else if (television.models) {\n                    for (const model of television.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = model_1.buildModel(variable_replacement_1.variableReplacement(model.model, modelMatch)).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n        this.isHbbTv = (userAgent) => {\n            return user_agent_1.userAgentParser(\"HbbTV\\/([1-9]{1}(?:\\.[0-9]{1}){1,2})\", userAgent);\n        };\n    }\n}\nexports.default = TelevisionParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst cars = require(\"../../../fixtures/regexes/device/car_browsers.json\");\nclass CarParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, car] of Object.entries(cars)) {\n                const match = user_agent_1.userAgentParser(car.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"car\";\n                result.brand = brand;\n                if (car.model) {\n                    result.model = variable_replacement_1.variableReplacement(car.model, match).trim();\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = CarParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst consoles = require(\"../../../fixtures/regexes/device/consoles.json\");\nclass ConsoleParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, gameConsole] of Object.entries(consoles)) {\n                const match = user_agent_1.userAgentParser(gameConsole.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = gameConsole.device;\n                result.brand = brand;\n                if (gameConsole.model) {\n                    result.model = variable_replacement_1.variableReplacement(gameConsole.model, match).trim();\n                }\n                else if (gameConsole.models) {\n                    for (const model of gameConsole.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = ConsoleParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst portableMediaPlayers = require(\"../../../fixtures/regexes/device/portable_media_player.json\");\nclass PortableMediaPlayersParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, portableMediaPlayer] of Object.entries(portableMediaPlayers)) {\n                const match = user_agent_1.userAgentParser(portableMediaPlayer.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = portableMediaPlayer.device;\n                result.brand = brand;\n                if (portableMediaPlayer.model) {\n                    result.model = variable_replacement_1.variableReplacement(portableMediaPlayer.model, match).trim();\n                }\n                else if (portableMediaPlayer.models) {\n                    for (const model of portableMediaPlayer.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = PortableMediaPlayersParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst operatingSystems = require(\"../../../fixtures/regexes/oss.json\");\nconst desktopOsArray = [\"AmigaOS\", \"IBM\", \"GNU/Linux\", \"Mac\", \"Unix\", \"Windows\", \"BeOS\", \"Chrome OS\"];\nconst shortOsNames = { \"AIX\": \"AIX\", \"AND\": \"Android\", \"AMG\": \"AmigaOS\", \"ATV\": \"Apple TV\", \"ARL\": \"Arch Linux\", \"BTR\": \"BackTrack\", \"SBA\": \"Bada\", \"BEO\": \"BeOS\", \"BLB\": \"BlackBerry OS\", \"QNX\": \"BlackBerry Tablet OS\", \"BMP\": \"Brew\", \"CES\": \"CentOS\", \"COS\": \"Chrome OS\", \"CYN\": \"CyanogenMod\", \"DEB\": \"Debian\", \"DFB\": \"DragonFly\", \"FED\": \"Fedora\", \"FOS\": \"Firefox OS\", \"FIR\": \"Fire OS\", \"BSD\": \"FreeBSD\", \"GNT\": \"Gentoo\", \"GTV\": \"Google TV\", \"HPX\": \"HP-UX\", \"HAI\": \"Haiku OS\", \"IRI\": \"IRIX\", \"INF\": \"Inferno\", \"KOS\": \"KaiOS\", \"KNO\": \"Knoppix\", \"KBT\": \"Kubuntu\", \"LIN\": \"GNU\\/Linux\", \"LBT\": \"Lubuntu\", \"VLN\": \"VectorLinux\", \"MAC\": \"Mac\", \"MAE\": \"Maemo\", \"MDR\": \"Mandriva\", \"SMG\": \"MeeGo\", \"MCD\": \"MocorDroid\", \"MIN\": \"Mint\", \"MLD\": \"MildWild\", \"MOR\": \"MorphOS\", \"NBS\": \"NetBSD\", \"MTK\": \"MTK \\/ Nucleus\", \"WII\": \"Nintendo\", \"NDS\": \"Nintendo Mobile\", \"OS2\": \"OS\\/2\", \"T64\": \"OSF1\", \"OBS\": \"OpenBSD\", \"ORD\": \"Ordissimo\", \"PSP\": \"PlayStation Portable\", \"PS3\": \"PlayStation\", \"RHT\": \"Red Hat\", \"ROS\": \"RISC OS\", \"REM\": \"Remix OS\", \"RZD\": \"RazoDroiD\", \"SAB\": \"Sabayon\", \"SSE\": \"SUSE\", \"SAF\": \"Sailfish OS\", \"SLW\": \"Slackware\", \"SOS\": \"Solaris\", \"SYL\": \"Syllable\", \"SYM\": \"Symbian\", \"SYS\": \"Symbian OS\", \"S40\": \"Symbian OS Series 40\", \"S60\": \"Symbian OS Series 60\", \"SY3\": \"Symbian^3\", \"TDX\": \"ThreadX\", \"TIZ\": \"Tizen\", \"UBT\": \"Ubuntu\", \"WTV\": \"WebTV\", \"WIN\": \"Windows\", \"WCE\": \"Windows CE\", \"WIO\": \"Windows IoT\", \"WMO\": \"Windows Mobile\", \"WPH\": \"Windows Phone\", \"WRT\": \"Windows RT\", \"XBX\": \"Xbox\", \"XBT\": \"Xubuntu\", \"YNS\": \"YunOs\", \"IOS\": \"iOS\", \"POS\": \"palmOS\", \"WOS\": \"webOS\" };\nconst osFamilies = { \"Android\": [\"AND\", \"CYN\", \"FIR\", \"REM\", \"RZD\", \"MLD\", \"MCD\", \"YNS\"], \"AmigaOS\": [\"AMG\", \"MOR\"], \"Apple TV\": [\"ATV\"], \"BlackBerry\": [\"BLB\", \"QNX\"], \"Brew\": [\"BMP\"], \"BeOS\": [\"BEO\", \"HAI\"], \"Chrome OS\": [\"COS\"], \"Firefox OS\": [\"FOS\", \"KOS\"], \"Gaming Console\": [\"WII\", \"PS3\"], \"Google TV\": [\"GTV\"], \"IBM\": [\"OS2\"], \"iOS\": [\"IOS\"], \"RISC OS\": [\"ROS\"], \"GNU\\/Linux\": [\"LIN\", \"ARL\", \"DEB\", \"KNO\", \"MIN\", \"UBT\", \"KBT\", \"XBT\", \"LBT\", \"FED\", \"RHT\", \"VLN\", \"MDR\", \"GNT\", \"SAB\", \"SLW\", \"SSE\", \"CES\", \"BTR\", \"SAF\", \"ORD\"], \"Mac\": [\"MAC\"], \"Mobile Gaming Console\": [\"PSP\", \"NDS\", \"XBX\"], \"Real-time OS\": [\"MTK\", \"TDX\"], \"Other Mobile\": [\"WOS\", \"POS\", \"SBA\", \"TIZ\", \"SMG\", \"MAE\"], \"Symbian\": [\"SYM\", \"SYS\", \"SY3\", \"S60\", \"S40\"], \"Unix\": [\"SOS\", \"AIX\", \"HPX\", \"BSD\", \"NBS\", \"OBS\", \"DFB\", \"SYL\", \"IRI\", \"T64\", \"INF\"], \"WebTV\": [\"WTV\"], \"Windows\": [\"WIN\"], \"Windows Mobile\": [\"WPH\", \"WMO\", \"WCE\", \"WRT\", \"WIO\"] };\nclass OperatingSystemParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                name: \"\",\n                version: \"\",\n                platform: this.parsePlatform(userAgent)\n            };\n            for (const operatingSystem of operatingSystems) {\n                const match = user_agent_1.userAgentParser(operatingSystem.regex, userAgent);\n                if (!match)\n                    continue;\n                result.name = variable_replacement_1.variableReplacement(operatingSystem.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(operatingSystem.version, match), this.options.versionTruncation);\n                if (result.name === \"lubuntu\") {\n                    result.name = \"Lubuntu\";\n                }\n                if (result.name === \"debian\") {\n                    result.name = \"Debian\";\n                }\n                if (result.name === \"YunOS\") {\n                    result.name = \"YunOs\";\n                }\n                return result;\n            }\n            return null;\n        };\n        this.parsePlatform = (userAgent) => {\n            if (user_agent_1.userAgentParser(\"arm\", userAgent)) {\n                return \"ARM\";\n            }\n            if (user_agent_1.userAgentParser(\"WOW64|x64|win64|amd64|x86_64\", userAgent)) {\n                return \"x64\";\n            }\n            if (user_agent_1.userAgentParser(\"i[0-9]86|i86pc\", userAgent)) {\n                return \"x86\";\n            }\n            return \"\";\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = OperatingSystemParser;\nOperatingSystemParser.getDesktopOsArray = () => desktopOsArray;\nOperatingSystemParser.getOsFamily = (osName) => {\n    const osShortName = OperatingSystemParser.getOsShortName(osName);\n    for (const [osFamily, shortNames] of Object.entries(osFamilies)) {\n        if (shortNames.includes(osShortName)) {\n            return osFamily;\n        }\n    }\n    return \"\";\n};\nOperatingSystemParser.getOsShortName = (osName) => {\n    for (const [shortName, name] of Object.entries(shortOsNames)) {\n        if (name === osName)\n            return shortName;\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst vendorFragments = require(\"../../../fixtures/regexes/vendorfragments.json\");\nclass VendorFragmentParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const [brand, vendorFragment] of Object.entries(vendorFragments)) {\n                for (const regex of vendorFragment) {\n                    const match = user_agent_1.userAgentParser(regex, userAgent);\n                    if (!match)\n                        continue;\n                    return brand;\n                }\n            }\n            return \"\";\n        };\n    }\n}\nexports.default = VendorFragmentParser;\n","\"use strict\";\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst bots = require(\"../../../fixtures/regexes/bots.json\");\nclass BotParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d;\n            for (const bot of bots) {\n                const match = user_agent_1.userAgentParser(bot.regex, userAgent);\n                if (!match)\n                    continue;\n                return {\n                    name: bot.name,\n                    category: bot.category || \"\",\n                    url: bot.url || \"\",\n                    producer: {\n                        name: ((_b = (_a = bot) === null || _a === void 0 ? void 0 : _a.producer) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n                        url: ((_d = (_c = bot) === null || _c === void 0 ? void 0 : _c.producer) === null || _d === void 0 ? void 0 : _d.url) || \"\"\n                    }\n                };\n            }\n            return null;\n        };\n    }\n}\nmodule.exports = BotParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.versionCompare = (v1, v2, operator) => {\n    //      discuss at: http://locutus.io/php/version_compare/\n    //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n    //      original by: Aidan Lister (http://aidanlister.com/)\n    //      reimplemented by: Kankrelune (http://www.webfaktory.info/)\n    //      improved by: Brett Zamir (http://brett-zamir.me)\n    //      improved by: Scott Baker\n    //      improved by: Theriault (https://github.com/Theriault)\n    //      example 1: version_compare('8.2.5rc', '8.2.5a')\n    //      returns 1: 1\n    //      example 2: version_compare('8.2.50', '8.2.52', '<')\n    //      returns 2: true\n    //      example 3: version_compare('5.3.0-dev', '5.3.0')\n    //      returns 3: -1\n    //      example 4: version_compare('4.1.0.52','4.01.0.51')\n    //      returns 4: 1\n    // Important: compare must be initialized at 0.\n    let i;\n    let x;\n    let compare = 0;\n    // vm maps textual PHP versions to negatives so they're less than 0.\n    // PHP currently defines these as CASE-SENSITIVE. It is important to\n    // leave these as negatives so that they can come before numerical versions\n    // and as if no letters were there to begin with.\n    // (1alpha is < 1 and < 1.1 but > 1dev1)\n    // If a non-numerical value can't be mapped to this table, it receives\n    // -7 as its value.\n    const vm = {\n        \"dev\": -6,\n        \"alpha\": -5,\n        \"a\": -5,\n        \"beta\": -4,\n        \"b\": -4,\n        \"RC\": -3,\n        \"rc\": -3,\n        \"#\": -2,\n        \"p\": 1,\n        \"pl\": 1\n    };\n    // This function will be called to prepare each version argument.\n    // It replaces every _, -, and + with a dot.\n    // It surrounds any nonsequence of numbers/dots with dots.\n    // It replaces sequences of dots with a single dot.\n    //    version_compare('4..0', '4.0') === 0\n    // Important: A string of 0 length needs to be converted into a value\n    // even less than an unexisting value in vm (-7), hence [-8].\n    // It's also important to not strip spaces because of this.\n    //   version_compare('', ' ') === 1\n    const prepVersion = (v) => {\n        v = (\"\" + v).replace(/[_\\-+]/g, \".\");\n        v = v.replace(/([^.\\d]+)/g, \".$1.\").replace(/\\.{2,}/g, \".\");\n        return (!v.length ? [-8] : v.split(\".\"));\n    };\n    // This converts a version component to a number.\n    // Empty component becomes 0.\n    // Non-numerical component becomes a negative number.\n    // Numerical component becomes itself as an integer.\n    const numVersion = (v) => {\n        return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10));\n    };\n    v1 = prepVersion(v1);\n    v2 = prepVersion(v2);\n    x = Math.max(v1.length, v2.length);\n    for (i = 0; i < x; i++) {\n        if (v1[i] === v2[i]) {\n            continue;\n        }\n        v1[i] = numVersion(v1[i]);\n        v2[i] = numVersion(v2[i]);\n        if (v1[i] < v2[i]) {\n            compare = -1;\n            break;\n        }\n        else if (v1[i] > v2[i]) {\n            compare = 1;\n            break;\n        }\n    }\n    if (!operator) {\n        return compare;\n    }\n    // Important: operator is CASE-SENSITIVE.\n    // \"No operator\" seems to be treated as \"<.\"\n    // Any other values seem to make the function return null.\n    switch (operator) {\n        case \">\":\n        case \"gt\":\n            return (compare > 0);\n        case \">=\":\n        case \"ge\":\n            return (compare >= 0);\n        case \"<=\":\n        case \"le\":\n            return (compare <= 0);\n        case \"===\":\n        case \"=\":\n        case \"eq\":\n            return (compare === 0);\n        case \"<>\":\n        case \"!==\":\n        case \"ne\":\n            return (compare !== 0);\n        case \"\":\n        case \"<\":\n        case \"lt\":\n            return (compare < 0);\n        default:\n            return null;\n    }\n};\n"],"sourceRoot":""}