{"version":3,"sources":["components/common/GoBack/index.jsx","assets/images/arrow.png","components/common/GoBack/GoBack.module.scss","utils/formatNumber.js","components/common/EllipseOptions/index.jsx","assets/images/visa-card.png","assets/images/mastercard.png","redux/actions/virtualCard/getVirtualCard.js","components/VrtualCard/VirtualCards.module.scss","components/VrtualCard/Item.jsx","assets/images/creditCard.svg","components/VrtualCard/Card.jsx","components/VrtualCard/Card.module.scss","components/VrtualCard/AddMoneyModal.jsx","components/VrtualCard/virtualCardDetails/confirmRedeeModal.jsx"],"names":["GoBack","onClickHandler","style","authentication","className","classes","CustomStyle","Authentication","src","PREVIOUS_ICON","height","onClick","defaultProps","module","exports","num","options","locales","currency","minimumFractionDigits","maximumFractionDigits","number","Number","toString","replace","isNaN","Intl","NumberFormat","format","EllipseMenu","iconSize","userItemStyle","currentItem","direction","rest","floating","icon","name","size","link","Menu","marginLeft","marginTop","width","padding","map","item","i","onKeyPress","key","display","image","menustyle","dispatch","apiAction","method","url","onStart","type","GET_MY_VIRTUAL_CARD_START","onSuccess","data","GET_MY_VIRTUAL_CARD_SUCCESS","payload","onFailure","error","GET_MY_VIRTUAL_CARD_ERROR","VirtualCard","balance","virtualCard","userData","handleOnClick","canViewDetail","form","setForm","selectedWallet","setSelectedWallet","onOptionsChange","onAddMoneyToVirtualCard","isViewingDetail","userLocationData","step","setStep","errors","setErrors","balanceOnWallet","checkTransactionConfirmation","confirmationData","checking","confirmationError","loading","addMoneyOpen","setAddMoneyOpen","onRedeeMoney","isRedeeming","setisRedeeming","loadRedeeMoney","openConfirmModal","setOpenConfirmModal","shouldClear","history","useHistory","useState","copySuccess","setCopySuccess","VirtualCardImage","global","translate","push","pathname","state","textAreaRef","useRef","copyToClipBoard","e","CardNumber","a","stopPropagation","navigator","clipboard","writeText","ref","value","Content","verticalAlign","Header","Currency","role","justifyContent","Meta","Balance","localStorage","language","formatNumber","Language","undefined","CardType","visaCardImg","masterCardImg","marginBottom","CreationDate","border","CVV","MM","YYYY","content","on","pinned","trigger","float","basic","color","Group","Or","disabled","setIsRedeeming","PropTypes","Card","LeftSide","CardTitle","CardNumberSpaced","Cvv","cardOwner","FirstName","LastName","RightSide","Logo","circular","centered","Date","AddMoneyModal","setOpen","walletList","destinationContact","isSendingCash","useEffect","defaultOption","find","Default","setCurrentOpt","transition","duration","animation","onClose","open","closeOnDocumentClick","closeOnDimmerClick","onOpen","customStyle","id","currentOption","setCurrentOption","Wallets","onChange","placeholder","amount","tabIndex","parseInt","message","Description","loaderContent","Amount","Fees","ExternalFees","ExchangeFees","Taxes","ExchangeRate","fontSize","fontWeight","TotalAmount","AmountToBeSent","label","alignSelf","paddingLeft","Actions","negative","positive","bool","NestedModal","closeModal","closeOnTriggerClick","textAlign"],"mappings":"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","file":"static/js/7.82a5a4ea.chunk.js","sourcesContent":["import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport PREVIOUS_ICON from 'assets/images/arrow.png';\nimport classes from './GoBack.module.scss';\n\nconst GoBack = ({ onClickHandler, style, authentication }) => (\n  <div\n    className={\n      (style && classes.CustomStyle) ||\n      (authentication && classes.Authentication) ||\n      classes.GoBack\n    }\n  >\n    <Image\n      src={PREVIOUS_ICON}\n      height={30}\n      className=\"goBack\"\n      onClick={onClickHandler}\n    />\n  </div>\n);\n\nGoBack.propTypes = {\n  onClickHandler: PropTypes.func,\n  style: PropTypes.bool,\n  authentication: PropTypes.bool,\n};\n\nGoBack.defaultProps = {\n  onClickHandler: () => {},\n  style: false,\n  authentication: false,\n};\n\nexport default GoBack;\n","module.exports = __webpack_public_path__ + \"static/media/arrow.ac63cfa0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GoBack\":\"GoBack_GoBack__39LqY\",\"CustomStyle\":\"GoBack_CustomStyle__2BxUU\",\"Authentication\":\"GoBack_Authentication__2BTkU\"};","/**\n * @param {int|string} num\n * @param {object} options\n * @returns {string} a formatted number with grouped thousands separated by commas\n */\nexport default (num, options = {}) => {\n  const {\n    locales = 'en-US',\n    currency,\n    style = 'decimal',\n    minimumFractionDigits = 2,\n    maximumFractionDigits = 2,\n  } = options || {};\n  let number = Number((num || '').toString().replace(/[^0-9.]/g, ''));\n  number = Number.isNaN(number) ? 0 : number;\n  number =\n    options && style\n      ? new Intl.NumberFormat(locales, {\n          style,\n          minimumFractionDigits,\n          maximumFractionDigits,\n        }).format(number)\n      : number;\n  return currency ? `${number} ${currency}` : number;\n};\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport { Dropdown, Icon, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst EllipseMenu = ({\n  options,\n  iconSize,\n  userItemStyle,\n  currentItem,\n  direction,\n  ...rest\n}) => {\n  const menustyle = {\n    marginLeft: -245,\n    marginTop: -40,\n    width: 240,\n    padding: '10px 10px',\n  };\n  return (\n    <div className=\"icons\">\n      <Dropdown\n        {...rest}\n        floating\n        direction={direction}\n        icon={<Icon name=\"ellipsis vertical\" size={iconSize} link />}\n      >\n        <Dropdown.Menu\n          className=\"options menustyle-options\"\n          style={menustyle}\n        >\n          {options &&\n            options.map((item, i) => (\n              <div\n                onKeyPress={() => {}}\n                key={i.toString()}\n                className=\"innerOptions\"\n                onClick={() => item.onClick(currentItem)}\n              >\n                <div\n                  className=\"icon-image\"\n                  style={{ display: 'flex', ...userItemStyle }}\n                >\n                  <Image\n                    src={item.image}\n                    height={20}\n                    className=\"iconItem\"\n                  />\n                  <p className=\"itemName\">{item.name}</p>\n                </div>\n              </div>\n            ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\nEllipseMenu.propTypes = {\n  menustyle: PropTypes.objectOf(PropTypes.any),\n  options: PropTypes.arrayOf(PropTypes.any),\n  iconSize: PropTypes.string,\n  userItemStyle: PropTypes.objectOf(PropTypes.any),\n  direction: PropTypes.string,\n  currentItem: PropTypes.objectOf(PropTypes.any),\n};\n\nEllipseMenu.defaultProps = {\n  userItemStyle: {},\n  menustyle: {},\n  options: null,\n  iconSize: 'large',\n  direction: 'left',\n  currentItem: {},\n};\nexport default EllipseMenu;\n","module.exports = __webpack_public_path__ + \"static/media/visa-card.789474cb.png\";","module.exports = __webpack_public_path__ + \"static/media/mastercard.d41f7bc6.png\";","import {\n  GET_MY_VIRTUAL_CARD_START,\n  GET_MY_VIRTUAL_CARD_SUCCESS,\n  GET_MY_VIRTUAL_CARD_ERROR,\n} from 'constants/action-types/virtual-card/getVirtualCards';\n\nimport apiAction from 'helpers/apiAction';\n\nexport default () => dispatch =>\n  dispatch(\n    apiAction({\n      method: 'post',\n      url: '/GetVirtualCardList',\n      onStart: () => dispatch =>\n        dispatch({\n          type: GET_MY_VIRTUAL_CARD_START,\n        }),\n      onSuccess: data => dispatch => {\n        return dispatch({\n          type: GET_MY_VIRTUAL_CARD_SUCCESS,\n          payload: data,\n        });\n      },\n      onFailure: error => dispatch => {\n        return dispatch({\n          type: GET_MY_VIRTUAL_CARD_ERROR,\n          payload: {\n            error,\n          },\n        });\n      },\n    }),\n  );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VirtualCardList\":\"VirtualCards_VirtualCardList__1aDLY\",\"Container\":\"VirtualCards_Container__3LL0O\",\"Titles\":\"VirtualCards_Titles__1q4Bt\"};","/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Button, Image, Popup } from 'semantic-ui-react';\nimport EllipseMenu from 'components/common/EllipseOptions';\n\nimport './item.scss';\nimport Wrapper from 'hoc/Wrapper';\nimport visaCardImg from 'assets/images/visa-card.png';\nimport masterCardImg from 'assets/images/mastercard.png';\nimport VirtualCardImage from 'assets/images/creditCard.svg';\nimport formatNumber from 'utils/formatNumber';\nimport Card from './Card';\nimport AddMoneyModal from './AddMoneyModal';\n\nconst VirtualCard = ({\n  virtualCard,\n  userData,\n  handleOnClick,\n  canViewDetail,\n  form,\n  setForm,\n  selectedWallet,\n  setSelectedWallet,\n  onOptionsChange,\n  onAddMoneyToVirtualCard,\n  isViewingDetail,\n  userLocationData,\n  step,\n  setStep,\n  errors,\n  setErrors,\n  balanceOnWallet,\n  checkTransactionConfirmation,\n  confirmationData,\n  checking,\n  confirmationError,\n  loading,\n  addMoneyOpen,\n  setAddMoneyOpen,\n  onRedeeMoney,\n  isRedeeming,\n  setisRedeeming,\n  loadRedeeMoney,\n  error,\n  openConfirmModal,\n  setOpenConfirmModal,\n  shouldClear,\n}) => {\n  const history = useHistory();\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const options = [\n    {\n      image: VirtualCardImage,\n      name: global.translate('Virtual card details'),\n      onClick: item => {\n        history.push({\n          pathname: '/virtual-card-details',\n          state: { item },\n        });\n      },\n    },\n  ];\n\n  const textAreaRef = useRef(null);\n  const copyToClipBoard = async (e, CardNumber) => {\n    e.stopPropagation();\n    try {\n      await navigator.clipboard.writeText(CardNumber);\n      setCopySuccess('Card number copied!');\n    } catch (err) {\n      setCopySuccess('Failed to copy!');\n    }\n  };\n\n  const handleAddMoneyModal = () => {\n    setAddMoneyOpen(true);\n  };\n  const handleReddeemMoneyModal = () => {\n    setAddMoneyOpen(true);\n    setisRedeeming(true);\n  };\n  const formatBalance = balance => {\n    if (!balance) return '';\n    if (localStorage.language === 'fr') {\n      return formatNumber(balance, {\n        locales: localStorage.language\n          ? userData?.Language\n          : undefined,\n      });\n    }\n    return formatNumber(balance, {\n      locales: localStorage.language\n        ? localStorage.language\n        : undefined,\n    });\n  };\n  return (\n    <Item className=\"virtual-card-item \">\n      <textarea\n        style={{ display: 'none' }}\n        ref={textAreaRef}\n        value={virtualCard && virtualCard.CardNumber}\n      />\n      <Card virtualCard={virtualCard} userData={userData} />\n\n      <Item.Content verticalAlign=\"middle\">\n        <Item.Header className=\"vc-currency\">\n          {virtualCard && `${virtualCard.Currency} `}{' '}\n        </Item.Header>\n        <div\n          role=\"button\"\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginTop: '-.5rem',\n          }}\n          onClick={() => handleOnClick(virtualCard, userData)}\n        >\n          <Item.Meta style={{ width: '100%' }}>\n            <span className=\"vc-balance\">\n              {virtualCard &&\n                `${formatBalance(virtualCard.Balance)} ${\n                  virtualCard.Currency\n                }`}{' '}\n            </span>\n\n            <br />\n            {virtualCard && virtualCard.CardType === '1' ? (\n              <Wrapper>\n                <Image\n                  src={visaCardImg}\n                  size=\"mini\"\n                  verticalAlign=\"middle\"\n                />\n              </Wrapper>\n            ) : (\n              <Wrapper>\n                <Image\n                  src={masterCardImg}\n                  size=\"mini\"\n                  verticalAlign=\"middle\"\n                />\n              </Wrapper>\n            )}\n            <br />\n            <span\n              className=\"vc-info\"\n              style={{ marginBottom: '.5rem' }}\n            >\n              Created at :{' '}\n              <strong>{virtualCard?.CreationDate}</strong>{' '}\n            </span>\n            <br />\n            <hr style={{ border: 'none' }} />\n            <span className=\"vc-info\">\n              CVV: <strong>{virtualCard?.CVV}</strong>{' '}\n            </span>\n            <br />\n            <hr style={{ border: 'none' }} />\n            <span className=\"vc-info\">\n              Expiration date :{' '}\n              <strong>{`${virtualCard.MM}/${virtualCard.YYYY}`}</strong>\n            </span>\n            {!canViewDetail && (\n              <Popup\n                content={copySuccess}\n                on=\"click\"\n                pinned\n                trigger={\n                  <Button\n                    className=\"vc-btn-copy\"\n                    onClick={e =>\n                      copyToClipBoard(e, virtualCard?.CardNumber)\n                    }\n                    style={{ float: 'right' }}\n                    basic\n                    color=\"orange\"\n                    content=\"Copy card number\"\n                  />\n                }\n              />\n            )}\n            {canViewDetail ? (\n              <Button.Group style={{ float: 'right' }}>\n                <Button\n                  onClick={handleAddMoneyModal}\n                  basic\n                  color=\"orange\"\n                >\n                  Add money\n                </Button>\n                <Button.Or />\n                <Button\n                  disabled={virtualCard.Balance === '0.00'}\n                  onClick={handleReddeemMoneyModal}\n                  basic\n                  color=\"orange\"\n                >\n                  Redeem money\n                </Button>\n              </Button.Group>\n            ) : (\n              ''\n            )}\n          </Item.Meta>\n          {canViewDetail ? (\n            ''\n          ) : (\n            <EllipseMenu\n              options={options}\n              currentItem={virtualCard}\n            />\n          )}\n        </div>\n      </Item.Content>\n      <AddMoneyModal\n        addMoneyOpen={addMoneyOpen}\n        setAddMoneyOpen={setAddMoneyOpen}\n        virtualCard={virtualCard}\n        userData={userData}\n        form={form}\n        setForm={setForm}\n        selectedWallet={selectedWallet}\n        setSelectedWallet={setSelectedWallet}\n        onOptionsChange={onOptionsChange}\n        onAddMoneyToVirtualCard={onAddMoneyToVirtualCard}\n        isViewingDetail={isViewingDetail}\n        userLocationData={userLocationData}\n        step={step}\n        setStep={setStep}\n        setErrors={setErrors}\n        errors={errors}\n        balanceOnWallet={balanceOnWallet}\n        checkTransactionConfirmation={checkTransactionConfirmation}\n        confirmationData={confirmationData}\n        confirmationError={confirmationError}\n        checking={checking}\n        loading={loading}\n        onRedeeMoney={onRedeeMoney}\n        isRedeeming={isRedeeming}\n        setIsRedeeming={setisRedeeming}\n        loadRedeeMoney={loadRedeeMoney}\n        error={error}\n        openConfirmModal={openConfirmModal}\n        setOpenConfirmModal={setOpenConfirmModal}\n        shouldClear={shouldClear}\n      />\n    </Item>\n  );\n};\n\nVirtualCard.propTypes = {\n  virtualCard: PropTypes.objectOf(PropTypes.any).isRequired,\n  Balance: PropTypes.string.isRequired,\n  userData: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleOnClick: PropTypes.func,\n  setAddMoneyOpen: PropTypes.func,\n  addMoneyOpen: PropTypes.bool.isRequired,\n  setSelectedWallet: PropTypes.func,\n  canViewDetail: PropTypes.bool,\n  form: PropTypes.objectOf(PropTypes.any).isRequired,\n  setForm: PropTypes.func,\n  selectedWallet: PropTypes.func,\n  onOptionsChange: PropTypes.func,\n  onAddMoneyToVirtualCard: PropTypes.func,\n  isViewingDetail: PropTypes.bool,\n  userLocationData: PropTypes.objectOf(PropTypes.any),\n  step: PropTypes.number,\n  setStep: PropTypes.func,\n  errors: PropTypes.objectOf(PropTypes.any),\n  setErrors: PropTypes.func,\n  balanceOnWallet: PropTypes.objectOf(PropTypes.any),\n  checkTransactionConfirmation: PropTypes.func,\n  confirmationData: PropTypes.objectOf(PropTypes.any),\n  checking: PropTypes.bool,\n  confirmationError: PropTypes.objectOf(PropTypes.any),\n  loading: PropTypes.bool,\n  onRedeeMoney: PropTypes.func,\n  isRedeeming: PropTypes.bool,\n  setisRedeeming: PropTypes.func,\n  loadRedeeMoney: PropTypes.bool,\n  error: PropTypes.string,\n  openConfirmModal: PropTypes.bool,\n  setOpenConfirmModal: PropTypes.func,\n  shouldClear: PropTypes.bool,\n};\nVirtualCard.defaultProps = {\n  handleOnClick: () => {},\n  setAddMoneyOpen: () => {},\n  setSelectedWallet: () => {},\n  canViewDetail: false,\n  setForm: () => {},\n  selectedWallet: () => {},\n  onOptionsChange: () => {},\n  onAddMoneyToVirtualCard: () => {},\n  isViewingDetail: false,\n  userLocationData: {},\n  step: PropTypes.number,\n  setStep: () => {},\n  errors: {},\n  setErrors: () => {},\n  balanceOnWallet: {},\n  checkTransactionConfirmation: () => {},\n  confirmationData: {},\n  checking: false,\n  confirmationError: {},\n  loading: false,\n  onRedeeMoney: () => {},\n  isRedeeming: false,\n  setisRedeeming: () => {},\n  loadRedeeMoney: false,\n  error: null,\n  openConfirmModal: false,\n  setOpenConfirmModal: () => {},\n  shouldClear: false,\n};\n\nexport default VirtualCard;\n","module.exports = __webpack_public_path__ + \"static/media/creditCard.cc6ec3a2.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'semantic-ui-react';\nimport Logo from 'assets/images/logo.png';\nimport classes from './Card.module.scss';\n\nconst Card = ({ virtualCard, userData }) => {\n  return (\n    <div className={classes.Card}>\n      <div className={classes.LeftSide}>\n        <span className={classes.CardTitle}>Virtual Card</span>\n        <span className={classes.CardNumber}>\n          {virtualCard && virtualCard.CardNumberSpaced}\n        </span>\n        <span className={classes.Cvv}>\n          {virtualCard && virtualCard.CVV}\n        </span>\n        <span className={classes.cardOwner}>\n          {' '}\n          {`${userData?.FirstName} ${userData?.LastName}`}\n        </span>\n      </div>\n      <div className={classes.RightSide}>\n        <div className={classes.Logo}>\n          <span>2U Money</span>\n          <Image src={Logo} size=\"mini\" circular centered />\n        </div>\n        <div className={classes.Date}>\n          <span>VALID TRHU</span>\n          <span>\n            {virtualCard && `${virtualCard.MM}'/'${virtualCard.YYYY}`}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  virtualCard: PropTypes.objectOf(PropTypes.any).isRequired,\n  userData: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__hGMtb\",\"LeftSide\":\"Card_LeftSide__2n8hR\",\"CardNumber\":\"Card_CardNumber__3BpKK\",\"CardTitle\":\"Card_CardTitle__2awpS\",\"cardOwner\":\"Card_cardOwner__NTpGM\",\"Cvv\":\"Card_Cvv__2vPZd\",\"RightSide\":\"Card_RightSide__103er\",\"Logo\":\"Card_Logo__1q2sd\",\"Date\":\"Card_Date__nzJlI\"};","/* eslint-disable consistent-return */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Modal,\n  Button,\n  Icon,\n  Input,\n  TransitionablePortal,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport PinCodeForm from 'components/common/PinCodeForm';\nimport LoaderComponent from 'components/common/Loader';\nimport Message from 'components/common/Message';\nimport TransactionEntity from 'components/MoneyTransfer/SendMoney/TransactionEntity';\nimport Wrapper from 'hoc/Wrapper';\nimport NestedModal from './virtualCardDetails/confirmRedeeModal';\n\nconst AddMoneyModal = ({\n  setOpen,\n  walletList,\n  destinationContact,\n  errors,\n  onOptionsChange,\n  form,\n  balanceOnWallet,\n  setForm,\n  currency,\n  checkTransactionConfirmation,\n  checking,\n  confirmationError,\n  confirmationData,\n  loading,\n  error,\n  isSendingCash,\n  data,\n  setErrors,\n  step,\n  setStep,\n  addMoneyOpen,\n  setAddMoneyOpen,\n  userData,\n  selectedWallet,\n  setSelectedWallet,\n  onAddMoneyToVirtualCard,\n  isViewingDetail,\n  onRedeeMoney,\n  isRedeeming,\n  setIsRedeeming,\n  loadRedeeMoney,\n  openConfirmModal,\n  setOpenConfirmModal,\n  virtualCard,\n  shouldClear,\n}) => {\n  useEffect(() => {\n    if (data && data[0] && isViewingDetail) {\n      setStep(step + 1);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (isViewingDetail) {\n      return () => {\n        setStep(1);\n      };\n    }\n  }, []);\n  const defaultOption =\n    walletList && walletList.find(item => item.Default === 'YES');\n  const [setCurrentOpt] = useState({});\n\n  useEffect(() => {\n    if (defaultOption) {\n      setCurrentOpt(defaultOption);\n    }\n  }, [defaultOption]);\n  useEffect(() => {\n    if (step === 3 && isViewingDetail) {\n      setStep(1);\n      setOpen(false);\n      setErrors(null);\n    }\n  }, [step]);\n\n  return (\n    <Wrapper>\n      {' '}\n      <TransitionablePortal\n        transition={{\n          duration: 400,\n          animation: 'fade',\n        }}\n        onClose={() => setOpen(false)}\n        open={addMoneyOpen}\n      >\n        <Modal\n          size=\"small\"\n          open={addMoneyOpen}\n          closeOnDocumentClick={false}\n          closeOnDimmerClick={false}\n          onOpen={() => {\n            setOpen(false);\n          }}\n        >\n          <Modal.Header centered className=\"modal-title\">\n            {isRedeeming\n              ? global.translate(`Redeem money from my virtual card`)\n              : global.translate(`Add money to my virtual card`)}\n          </Modal.Header>\n          {step === 1 && (\n            <Modal.Content className=\"entities\">\n              <div className=\"entities\">\n                <TransactionEntity\n                  customStyle\n                  data={userData}\n                  id={1}\n                  currentOption={selectedWallet}\n                  setCurrentOption={setSelectedWallet}\n                  isSendingCash={isSendingCash}\n                  name=\"sourceWallet\"\n                  form={form}\n                  walletList={userData?.Wallets}\n                  onChange={onOptionsChange}\n                  destinationContact={destinationContact}\n                  isRedeeming={isRedeeming}\n                />{' '}\n              </div>\n\n              <div className=\"remaining-money-shade\">\n                <h4 className=\"available\">\n                  {global.translate(\n                    'Available Balance in the Selected Wallet',\n                  )}\n                  <p className=\"available-value\">{balanceOnWallet}</p>\n                </h4>\n              </div>\n              {isRedeeming ? (\n                ''\n              ) : (\n                <div className=\"money-section\">\n                  <div className=\"amount\">\n                    <span>{global.translate('Amount', 116)}</span>\n                  </div>\n                  <div className=\"amount-value\">\n                    <div className=\"form-information\">\n                      <Input\n                        type=\"number\"\n                        name=\"amount\"\n                        placeholder={global.translate('Amount')}\n                        onChange={onOptionsChange}\n                        value={form?.amount || null}\n                      />\n                      <strong>{currency}</strong>\n                    </div>\n                  </div>\n\n                  <div className=\"plus-minus-icons\">\n                    <div\n                      role=\"button\"\n                      tabIndex=\"0\"\n                      onKeyPress={() => {}}\n                      className=\"icon\"\n                      onClick={() => {\n                        setForm({\n                          ...form,\n                          amount: parseInt(form.amount, 10) - 1,\n                        });\n                      }}\n                    >\n                      <Icon name=\"minus\" className=\"inner-icon\" />\n                    </div>\n                    <div\n                      className=\"icon\"\n                      role=\"button\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        setForm({\n                          ...form,\n                          amount: parseInt(form.amount, 10) + 1,\n                        });\n                      }}\n                      onKeyPress={() => {}}\n                    >\n                      <Icon name=\"add\" className=\"inner-icon\" />\n                    </div>\n                  </div>\n                </div>\n              )}\n              {isRedeeming ? (\n                ''\n              ) : (\n                <div className=\"load-stuff\">\n                  {errors && <Message message={errors} />}\n                  {confirmationError && confirmationError[0] && (\n                    <Message\n                      message={\n                        confirmationError[0].Description\n                          ? global.translate(\n                              confirmationError[0].Description,\n                            )\n                          : global.translate(confirmationError.error)\n                      }\n                    />\n                  )}\n                  {confirmationError && !confirmationError[0] && (\n                    <Message\n                      message={global.translate(\n                        confirmationError.error,\n                      )}\n                    />\n                  )}\n                  {checking && (\n                    <LoaderComponent\n                      loaderContent={global.translate(\n                        'Working…',\n                        412,\n                      )}\n                    />\n                  )}\n                </div>\n              )}\n            </Modal.Content>\n          )}\n          {step === 2 && (\n            <Modal.Content className=\"ss-content\">\n              {confirmationData && confirmationData[0] && (\n                <>\n                  <div className=\"ss-amount\">\n                    <p>{global.translate('Amount', 116)}: </p>{' '}\n                    &nbsp;&nbsp;\n                    <p>\n                      <strong>{confirmationData[0].Amount}</strong>\n                    </p>\n                  </div>\n                  <div className=\"fees\">\n                    <div className=\"fees-list\">\n                      <p>{global.translate('Fees', 117)}</p>\n\n                      <div className=\"fees-item\">\n                        <p className=\"left\">\n                          {global.translate('Fees', 117)}:\n                        </p>\n                        <p className=\"right\">\n                          {confirmationData[0].Fees}\n                        </p>\n                      </div>\n                      <div className=\"fees-item\">\n                        <p className=\"left\">\n                          {global.translate('External fees', 121)}:\n                        </p>\n                        <p className=\"right\">\n                          {confirmationData[0].ExternalFees}\n                        </p>\n                      </div>\n                      <div className=\"fees-item\">\n                        <p className=\"left\">\n                          {global.translate('Exchange fees', 120)}:\n                        </p>\n                        <p className=\"right\">\n                          {' '}\n                          {confirmationData[0].ExchangeFees}\n                        </p>\n                      </div>\n                      <div className=\"fees-item\">\n                        <p className=\"left\">\n                          {global.translate('Taxes', 965)}:\n                        </p>\n                        <p className=\"right\">\n                          {confirmationData[0].Taxes}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"exchange-rate\">\n                    <p>\n                      {global.translate('Exchange Rate', 80)}=\n                      {confirmationData[0].ExchangeRate}\n                    </p>\n                  </div>\n                  <div className=\"amount-to-be-recieved-break-down\">\n                    <div className=\"fees-item\">\n                      <p\n                        className=\"left\"\n                        style={{ marginTop: '13px' }}\n                      >\n                        {global.translate('Total', 269)}:\n                      </p>\n                      <p className=\"right\">\n                        <strong\n                          className=\"bolder\"\n                          style={{\n                            fontSize: '20px',\n                            fontWeight: 500,\n                          }}\n                        >\n                          {confirmationData[0].TotalAmount}\n                        </strong>\n                      </p>\n                    </div>\n                    <div className=\"fees-item\">\n                      <p\n                        className=\"left\"\n                        style={{ marginTop: '13px' }}\n                      >\n                        {global.translate(\n                          'Amount to be received',\n                          397,\n                        )}\n                        :\n                      </p>\n                      <p className=\"right\">\n                        {' '}\n                        <strong\n                          className=\"bolder\"\n                          style={{\n                            fontSize: '20px',\n                            fontWeight: 500,\n                          }}\n                        >\n                          {confirmationData[0].AmountToBeSent}\n                        </strong>\n                      </p>\n                    </div>\n                  </div>\n                </>\n              )}\n              <>\n                <div className=\"pin-number\">\n                  <PinCodeForm\n                    shouldClear={shouldClear}\n                    label={global.translate(\n                      'Confirm  your PIN number',\n                      941,\n                    )}\n                    onChange={onOptionsChange}\n                    name=\"pin\"\n                  />\n                </div>\n                <div\n                  className=\"load-stuff\"\n                  style={{ alignSelf: 'center' }}\n                >\n                  {' '}\n                  {errors && shouldClear && (\n                    <Message message={errors} />\n                  )}\n                  <>\n                    {' '}\n                    {error && shouldClear && (\n                      <Message message={global.translate(error)} />\n                    )}\n                    {error && !error[0] && (\n                      <Message\n                        message={global.translate(error.error)}\n                      />\n                    )}\n                  </>\n                  {loading && (\n                    <LoaderComponent\n                      style={{ paddingLeft: '50px' }}\n                      loaderContent={global.translate(\n                        'Working…',\n                        412,\n                      )}\n                    />\n                  )}\n                </div>\n              </>\n            </Modal.Content>\n          )}\n          <Modal.Actions>\n            <>\n              {step !== 1 && step !== 3 && (\n                <Button\n                  disabled={checking || loading}\n                  negative\n                  onClick={() => {\n                    setStep(step - 1);\n                  }}\n                >\n                  {global.translate('Back', 174)}\n                </Button>\n              )}\n              {step !== 3 && (\n                <Button\n                  disabled={loading}\n                  negative\n                  onClick={() => {\n                    setAddMoneyOpen(!addMoneyOpen);\n                    setIsRedeeming(false);\n                    setStep(1);\n                    setIsRedeeming(false);\n                    setForm({\n                      ...form,\n                      amount: '',\n                    });\n                    setErrors(null);\n                  }}\n                >\n                  {global.translate('Cancel', 86)}\n                </Button>\n              )}\n\n              {isRedeeming ? (\n                <Button\n                  positive\n                  onClick={() => {\n                    setOpenConfirmModal(true);\n                    setAddMoneyOpen(false);\n                  }}\n                >\n                  {' '}\n                  Redeem Money{' '}\n                </Button>\n              ) : (\n                <Button\n                  positive\n                  loading={loading}\n                  disabled={checking || loading}\n                  onClick={() => {\n                    if (step === 1) {\n                      checkTransactionConfirmation();\n                    } else if (step === 2) {\n                      onAddMoneyToVirtualCard();\n                    }\n                  }}\n                >\n                  {global.translate('Add money')}\n                </Button>\n              )}\n            </>\n          </Modal.Actions>\n        </Modal>\n      </TransitionablePortal>\n      <NestedModal\n        setAddMoneyOpen={setAddMoneyOpen}\n        setIsRedeeming={setIsRedeeming}\n        onRedeeMoney={onRedeeMoney}\n        isRedeeming={isRedeeming}\n        onOptionsChange={onOptionsChange}\n        addMoneyOpen={addMoneyOpen}\n        setOpenConfirmModal={setOpenConfirmModal}\n        openConfirmModal={openConfirmModal}\n        loadRedeeMoney={loadRedeeMoney}\n        errors={errors}\n        error={error}\n        virtualCard={virtualCard}\n      />\n    </Wrapper>\n  );\n};\n\nAddMoneyModal.propTypes = {\n  userData: PropTypes.objectOf(PropTypes.any).isRequired,\n  setOpen: PropTypes.func,\n  walletList: PropTypes.arrayOf(PropTypes.any),\n  destinationContact: PropTypes.objectOf(PropTypes.any).isRequired,\n  onOptionsChange: PropTypes.func,\n  form: PropTypes.objectOf(PropTypes.any).isRequired,\n  balanceOnWallet: PropTypes.string,\n  setForm: PropTypes.func,\n  currency: PropTypes.string,\n  checkTransactionConfirmation: PropTypes.func,\n  checking: PropTypes.bool,\n  confirmationError: PropTypes.objectOf(PropTypes.any).isRequired,\n  confirmationData: PropTypes.objectOf(PropTypes.any).isRequired,\n  loading: PropTypes.bool,\n  error: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  setErrors: PropTypes.func.isRequired,\n  step: PropTypes.number.isRequired,\n  setStep: PropTypes.func.isRequired,\n  errors: PropTypes.string,\n  isSendingCash: PropTypes.bool,\n  addMoneyOpen: PropTypes.bool,\n  setAddMoneyOpen: PropTypes.func,\n  selectedWallet: PropTypes.objectOf(PropTypes.any),\n  setSelectedWallet: PropTypes.func,\n  onAddMoneyToVirtualCard: PropTypes.func,\n  isViewingDetail: PropTypes.bool,\n  onRedeeMoney: PropTypes.func,\n  isRedeeming: PropTypes.bool,\n  loadRedeeMoney: PropTypes.bool,\n  setIsRedeeming: PropTypes.func,\n  openConfirmModal: PropTypes.bool,\n  setOpenConfirmModal: PropTypes.func,\n  virtualCard: PropTypes.objectOf(PropTypes.any).isRequired,\n  shouldClear: PropTypes.bool.isRequired,\n};\n\nAddMoneyModal.defaultProps = {\n  loading: false,\n  errors: null,\n  currency: null,\n  checkTransactionConfirmation: () => {},\n  checking: false,\n  balanceOnWallet: 0,\n  setForm: () => {},\n  onOptionsChange: () => {},\n  setOpen: () => {},\n  walletList: [],\n  isSendingCash: PropTypes.bool,\n  addMoneyOpen: false,\n  setAddMoneyOpen: () => {},\n  selectedWallet: {},\n  setSelectedWallet: () => {},\n  onAddMoneyToVirtualCard: () => {},\n  isViewingDetail: false,\n  onRedeeMoney: () => {},\n  isRedeeming: false,\n  loadRedeeMoney: false,\n  setIsRedeeming: () => {},\n  openConfirmModal: false,\n  setOpenConfirmModal: () => {},\n};\nexport default AddMoneyModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport PinCodeForm from 'components/common/PinCodeForm';\nimport Message from 'components/common/Message';\nimport LoaderComponent from 'components/common/Loader';\n\nconst NestedModal = ({\n  setIsRedeeming,\n  setAddMoneyOpen,\n  onOptionsChange,\n  openConfirmModal,\n  setOpenConfirmModal,\n  onRedeeMoney,\n  loadRedeeMoney,\n  errors,\n  error,\n  virtualCard,\n}) => {\n  const closeModal = () => {\n    setIsRedeeming(false);\n    setAddMoneyOpen(false);\n    setOpenConfirmModal(false);\n  };\n\n  return (\n    <Modal\n      closeOnDocumentClick={false}\n      closeOnDimmerClick={false}\n      closeOnTriggerClick={false}\n      size=\"tiny\"\n      open={openConfirmModal}\n      onClose={closeModal}\n    >\n      <Modal.Header style={{ textAlign: 'center' }}>\n        {global.translate(`Redeem money`)}\n      </Modal.Header>\n      <Modal.Content>\n        <p style={{ color: 'orange', textAlign: 'center' }}>\n          <Icon name=\"warning sign\" />\n          {global.translate(`Are you sure you want to Redeem`)}\n          <strong style={{ color: '#333556' }}>\n            {' '}\n            {virtualCard?.Balance} &nbsp; {virtualCard?.Currency}{' '}\n          </strong>\n          <br />\n          {global.translate(`from your virtual card?`)}\n        </p>\n        <div className=\"pin-number\">\n          <PinCodeForm\n            label={global.translate('Confirm  your PIN number', 941)}\n            onChange={onOptionsChange}\n            name=\"pin\"\n          />\n        </div>\n        <div className=\"load-stuff\" style={{ alignSelf: 'center' }}>\n          {' '}\n          {errors && <Message message={errors} />}\n          <>\n            {' '}\n            {error && <Message message={global.translate(error)} />}\n            {error && !error[0] && (\n              <Message message={global.translate(error.error)} />\n            )}\n          </>\n          {loadRedeeMoney && (\n            <LoaderComponent\n              style={{ paddingLeft: '50px' }}\n              loaderContent={global.translate('Working…', 412)}\n            />\n          )}\n        </div>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={closeModal} negative>\n          Cancel\n        </Button>\n        <Button\n          loading={loadRedeeMoney}\n          onClick={() => {\n            onRedeeMoney();\n          }}\n          positive\n          content=\"Redeem Money\"\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nNestedModal.propTypes = {\n  setIsRedeeming: PropTypes.func,\n  setAddMoneyOpen: PropTypes.func,\n  onOptionsChange: PropTypes.func,\n  openConfirmModal: PropTypes.bool,\n  setOpenConfirmModal: PropTypes.func,\n  onRedeeMoney: PropTypes.bool,\n  loadRedeeMoney: PropTypes.bool,\n  errors: PropTypes.objectOf(PropTypes.any),\n  error: PropTypes.objectOf(PropTypes.any),\n  virtualCard: PropTypes.objectOf(PropTypes.any),\n};\nNestedModal.defaultProps = {\n  setIsRedeeming: () => {},\n  setAddMoneyOpen: () => {},\n  onOptionsChange: () => {},\n  openConfirmModal: false,\n  setOpenConfirmModal: () => {},\n  onRedeeMoney: false,\n  loadRedeeMoney: false,\n  errors: {},\n  error: {},\n  virtualCard: {},\n};\n\nexport default NestedModal;\n"],"sourceRoot":""}